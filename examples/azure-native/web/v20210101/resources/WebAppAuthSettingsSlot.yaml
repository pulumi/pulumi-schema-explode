$token: azure-native:web/v20210101:WebAppAuthSettingsSlot
description: Configuration settings for the Azure App Service Authentication / Authorization feature.
properties:
  aadClaimsAuthorization:
    type: string
    description: Gets a JSON string containing the Azure AD Acl settings.
  additionalLoginParams:
    type: array
    items:
      type: string
    description: |-
      Login parameters to send to the OpenID Connect authorization endpoint when
      a user logs in. Each parameter must be in the form "key=value".
  allowedAudiences:
    type: array
    items:
      type: string
    description: |-
      Allowed audience values to consider when validating JWTs issued by 
      Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
      allowed audience, regardless of this setting.
  allowedExternalRedirectUrls:
    type: array
    items:
      type: string
    description: |-
      External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
      This is an advanced setting typically only needed by Windows Store application backends.
      Note that URLs within the current domain are always implicitly allowed.
  authFilePath:
    type: string
    description: |-
      The path of the config file containing auth settings.
      If the path is relative, base will the site's root directory.
  clientId:
    type: string
    description: |-
      The Client ID of this relying party application, known as the client_id.
      This setting is required for enabling OpenID Connection authentication with Azure Active Directory or 
      other 3rd party OpenID Connect providers.
      More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
  clientSecret:
    type: string
    description: |-
      The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
      This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
      Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
      More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
  clientSecretCertificateThumbprint:
    type: string
    description: |-
      An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
      a replacement for the Client Secret. It is also optional.
  clientSecretSettingName:
    type: string
    description: The app setting name that contains the client secret of the relying party application.
  configVersion:
    type: string
    description: |-
      The ConfigVersion of the Authentication / Authorization feature in use for the current app.
      The setting in this value can control the behavior of the control plane for Authentication / Authorization.
  defaultProvider:
    type: string
    description: |-
      The default authentication provider to use when multiple providers are configured.
      This setting is only needed if multiple providers are configured and the unauthenticated client
      action is set to "RedirectToLoginPage".
  enabled:
    type: boolean
    description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
  facebookAppId:
    type: string
    description: |-
      The App ID of the Facebook app used for login.
      This setting is required for enabling Facebook Login.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  facebookAppSecret:
    type: string
    description: |-
      The App Secret of the Facebook app used for Facebook Login.
      This setting is required for enabling Facebook Login.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  facebookAppSecretSettingName:
    type: string
    description: The app setting name that contains the app secret used for Facebook Login.
  facebookOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
      This setting is optional.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  gitHubClientId:
    type: string
    description: |-
      The Client Id of the GitHub app used for login.
      This setting is required for enabling Github login
  gitHubClientSecret:
    type: string
    description: |-
      The Client Secret of the GitHub app used for Github Login.
      This setting is required for enabling Github login.
  gitHubClientSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the client secret of the Github
      app used for GitHub Login.
  gitHubOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
      This setting is optional
  googleClientId:
    type: string
    description: |-
      The OpenID Connect Client ID for the Google web application.
      This setting is required for enabling Google Sign-In.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  googleClientSecret:
    type: string
    description: |-
      The client secret associated with the Google web application.
      This setting is required for enabling Google Sign-In.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  googleClientSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the client secret associated with 
      the Google web application.
  googleOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
      This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  isAuthFromFile:
    type: string
    description: |-
      "true" if the auth config settings should be read from a file,
      "false" otherwise
  issuer:
    type: string
    description: |-
      The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
      When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
      This URI is a case-sensitive identifier for the token issuer.
      More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
  kind:
    type: string
    description: Kind of resource.
  microsoftAccountClientId:
    type: string
    description: |-
      The OAuth 2.0 client ID that was created for the app used for authentication.
      This setting is required for enabling Microsoft Account authentication.
      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
  microsoftAccountClientSecret:
    type: string
    description: |-
      The OAuth 2.0 client secret that was created for the app used for authentication.
      This setting is required for enabling Microsoft Account authentication.
      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
  microsoftAccountClientSecretSettingName:
    type: string
    description: |-
      The app setting name containing the OAuth 2.0 client secret that was created for the
      app used for authentication.
  microsoftAccountOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
      This setting is optional. If not specified, "wl.basic" is used as the default scope.
      Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
  name:
    type: string
    description: Resource Name.
  runtimeVersion:
    type: string
    description: |-
      The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
      The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
  tokenRefreshExtensionHours:
    type: number
    description: |-
      The number of hours after session token expiration that a session token can be used to
      call the token refresh API. The default is 72 hours.
  tokenStoreEnabled:
    type: boolean
    description: |-
      <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
       The default is <code>false</code>.
  twitterConsumerKey:
    type: string
    description: |-
      The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      This setting is required for enabling Twitter Sign-In.
      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
  twitterConsumerSecret:
    type: string
    description: |-
      The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      This setting is required for enabling Twitter Sign-In.
      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
  twitterConsumerSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      application used for sign-in.
  type:
    type: string
    description: Resource type.
  unauthenticatedClientAction:
    type: string
    description: The action to take when an unauthenticated client attempts to access the app.
  validateIssuer:
    type: boolean
    description: Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.
type: object
required:
  - name
  - type
inputProperties:
  aadClaimsAuthorization:
    type: string
    description: Gets a JSON string containing the Azure AD Acl settings.
  additionalLoginParams:
    type: array
    items:
      type: string
    description: |-
      Login parameters to send to the OpenID Connect authorization endpoint when
      a user logs in. Each parameter must be in the form "key=value".
  allowedAudiences:
    type: array
    items:
      type: string
    description: |-
      Allowed audience values to consider when validating JWTs issued by 
      Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
      allowed audience, regardless of this setting.
  allowedExternalRedirectUrls:
    type: array
    items:
      type: string
    description: |-
      External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
      This is an advanced setting typically only needed by Windows Store application backends.
      Note that URLs within the current domain are always implicitly allowed.
  authFilePath:
    type: string
    description: |-
      The path of the config file containing auth settings.
      If the path is relative, base will the site's root directory.
  clientId:
    type: string
    description: |-
      The Client ID of this relying party application, known as the client_id.
      This setting is required for enabling OpenID Connection authentication with Azure Active Directory or 
      other 3rd party OpenID Connect providers.
      More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
  clientSecret:
    type: string
    description: |-
      The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
      This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
      Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
      More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
  clientSecretCertificateThumbprint:
    type: string
    description: |-
      An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
      a replacement for the Client Secret. It is also optional.
  clientSecretSettingName:
    type: string
    description: The app setting name that contains the client secret of the relying party application.
  configVersion:
    type: string
    description: |-
      The ConfigVersion of the Authentication / Authorization feature in use for the current app.
      The setting in this value can control the behavior of the control plane for Authentication / Authorization.
  defaultProvider:
    $ref: "#/types/azure-native:web/v20210101:BuiltInAuthenticationProvider"
    description: |-
      The default authentication provider to use when multiple providers are configured.
      This setting is only needed if multiple providers are configured and the unauthenticated client
      action is set to "RedirectToLoginPage".
  enabled:
    type: boolean
    description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
  facebookAppId:
    type: string
    description: |-
      The App ID of the Facebook app used for login.
      This setting is required for enabling Facebook Login.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  facebookAppSecret:
    type: string
    description: |-
      The App Secret of the Facebook app used for Facebook Login.
      This setting is required for enabling Facebook Login.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  facebookAppSecretSettingName:
    type: string
    description: The app setting name that contains the app secret used for Facebook Login.
  facebookOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
      This setting is optional.
      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
  gitHubClientId:
    type: string
    description: |-
      The Client Id of the GitHub app used for login.
      This setting is required for enabling Github login
  gitHubClientSecret:
    type: string
    description: |-
      The Client Secret of the GitHub app used for Github Login.
      This setting is required for enabling Github login.
  gitHubClientSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the client secret of the Github
      app used for GitHub Login.
  gitHubOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
      This setting is optional
  googleClientId:
    type: string
    description: |-
      The OpenID Connect Client ID for the Google web application.
      This setting is required for enabling Google Sign-In.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  googleClientSecret:
    type: string
    description: |-
      The client secret associated with the Google web application.
      This setting is required for enabling Google Sign-In.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  googleClientSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the client secret associated with 
      the Google web application.
  googleOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
      This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
  isAuthFromFile:
    type: string
    description: |-
      "true" if the auth config settings should be read from a file,
      "false" otherwise
  issuer:
    type: string
    description: |-
      The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
      When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
      This URI is a case-sensitive identifier for the token issuer.
      More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
  kind:
    type: string
    description: Kind of resource.
  microsoftAccountClientId:
    type: string
    description: |-
      The OAuth 2.0 client ID that was created for the app used for authentication.
      This setting is required for enabling Microsoft Account authentication.
      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
  microsoftAccountClientSecret:
    type: string
    description: |-
      The OAuth 2.0 client secret that was created for the app used for authentication.
      This setting is required for enabling Microsoft Account authentication.
      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
  microsoftAccountClientSecretSettingName:
    type: string
    description: |-
      The app setting name containing the OAuth 2.0 client secret that was created for the
      app used for authentication.
  microsoftAccountOAuthScopes:
    type: array
    items:
      type: string
    description: |-
      The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
      This setting is optional. If not specified, "wl.basic" is used as the default scope.
      Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
  name:
    type: string
    description: Name of web app.
  resourceGroupName:
    type: string
    description: Name of the resource group to which the resource belongs.
  runtimeVersion:
    type: string
    description: |-
      The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
      The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
  slot:
    type: string
    description: Name of web app slot. If not specified then will default to production slot.
  tokenRefreshExtensionHours:
    type: number
    description: |-
      The number of hours after session token expiration that a session token can be used to
      call the token refresh API. The default is 72 hours.
  tokenStoreEnabled:
    type: boolean
    description: |-
      <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
       The default is <code>false</code>.
  twitterConsumerKey:
    type: string
    description: |-
      The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      This setting is required for enabling Twitter Sign-In.
      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
  twitterConsumerSecret:
    type: string
    description: |-
      The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      This setting is required for enabling Twitter Sign-In.
      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
  twitterConsumerSecretSettingName:
    type: string
    description: |-
      The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      application used for sign-in.
  unauthenticatedClientAction:
    $ref: "#/types/azure-native:web/v20210101:UnauthenticatedClientAction"
    description: The action to take when an unauthenticated client attempts to access the app.
  validateIssuer:
    type: boolean
    description: Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.
requiredInputs:
  - name
  - resourceGroupName
  - slot
aliases:
  - type: azure-native:web:WebAppAuthSettingsSlot
  - type: azure-native:web/v20150801:WebAppAuthSettingsSlot
  - type: azure-native:web/v20160801:WebAppAuthSettingsSlot
  - type: azure-native:web/v20180201:WebAppAuthSettingsSlot
  - type: azure-native:web/v20181101:WebAppAuthSettingsSlot
  - type: azure-native:web/v20190801:WebAppAuthSettingsSlot
  - type: azure-native:web/v20200601:WebAppAuthSettingsSlot
  - type: azure-native:web/v20200901:WebAppAuthSettingsSlot
  - type: azure-native:web/v20201001:WebAppAuthSettingsSlot
  - type: azure-native:web/v20201201:WebAppAuthSettingsSlot
  - type: azure-native:web/v20210115:WebAppAuthSettingsSlot
  - type: azure-native:web/v20210201:WebAppAuthSettingsSlot
  - type: azure-native:web/v20210301:WebAppAuthSettingsSlot
  - type: azure-native:web/v20220301:WebAppAuthSettingsSlot
