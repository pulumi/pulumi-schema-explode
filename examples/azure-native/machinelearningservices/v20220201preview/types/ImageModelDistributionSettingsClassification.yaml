$token: azure-native:machinelearningservices/v20220201preview:ImageModelDistributionSettingsClassification
properties:
  amsGradient:
    type: string
    description: Enable AMSGrad when optimizer is 'adam' or 'adamw'.
  augmentations:
    type: string
    description: Settings for using Augmentations.
  beta1:
    type: string
    description: Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
  beta2:
    type: string
    description: Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
  distributed:
    type: string
    description: Whether to use distributer training.
  earlyStopping:
    type: string
    description: Enable early stopping logic during training.
  earlyStoppingDelay:
    type: string
    description: "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r

      is tracked for early stopping. Must be a positive integer."
  earlyStoppingPatience:
    type: string
    description: "Minimum number of epochs or validation evaluations with no primary metric improvement before\r

      the run is stopped. Must be a positive integer."
  enableOnnxNormalization:
    type: string
    description: Enable normalization when exporting ONNX model.
  evaluationFrequency:
    type: string
    description: Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
  gradientAccumulationStep:
    type: string
    description: "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r

      updating the model weights while accumulating the gradients of those steps, and then using\r

      the accumulated gradients to compute the weight updates. Must be a positive integer."
  layersToFreeze:
    type: string
    description: "Number of layers to freeze for the model. Must be a positive integer.\r

      For instance, passing 2 as value for 'seresnext' means\r

      freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r

      see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
  learningRate:
    type: string
    description: Initial learning rate. Must be a float in the range [0, 1].
  learningRateScheduler:
    type: string
    description: Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.
  modelName:
    type: string
    description: "Name of the model to use for training.\r

      For more information on the available models please visit the official documentation:\r

      https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
  momentum:
    type: string
    description: Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].
  nesterov:
    type: string
    description: Enable nesterov when optimizer is 'sgd'.
  numberOfEpochs:
    type: string
    description: Number of training epochs. Must be a positive integer.
  numberOfWorkers:
    type: string
    description: Number of data loader workers. Must be a non-negative integer.
  optimizer:
    type: string
    description: Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.
  randomSeed:
    type: string
    description: Random seed to be used when using deterministic training.
  splitRatio:
    type: string
    description: "If validation data is not defined, this specifies the split ratio for splitting\r

      train data into random train and validation subsets. Must be a float in the range [0, 1]."
  stepLRGamma:
    type: string
    description: Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
  stepLRStepSize:
    type: string
    description: Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
  trainingBatchSize:
    type: string
    description: Training batch size. Must be a positive integer.
  trainingCropSize:
    type: string
    description: Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
  validationBatchSize:
    type: string
    description: Validation batch size. Must be a positive integer.
  validationCropSize:
    type: string
    description: Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
  validationResizeSize:
    type: string
    description: Image size to which to resize before cropping for validation dataset. Must be a positive integer.
  warmupCosineLRCycles:
    type: string
    description: Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
  warmupCosineLRWarmupEpochs:
    type: string
    description: Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
  weightDecay:
    type: string
    description: Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
  weightedLoss:
    type: string
    description: "Weighted loss. The accepted values are 0 for no weighted loss.\r

      1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2."
type: object
