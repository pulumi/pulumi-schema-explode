$token: azure-native:sql/v20220201preview:DatabaseBlobAuditingPolicy
description: A database blob auditing policy.
properties:
  auditActionsAndGroups:
    type: array
    items:
      type: string
    description: "Specifies the Actions-Groups and Actions to audit.\r

      \r

      The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r

      \r

      BATCH_COMPLETED_GROUP,\r

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r

      FAILED_DATABASE_AUTHENTICATION_GROUP.\r

      \r

      This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r

      \r

      The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r

      \r

      APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r

      BACKUP_RESTORE_GROUP\r

      DATABASE_LOGOUT_GROUP\r

      DATABASE_OBJECT_CHANGE_GROUP\r

      DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r

      DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r

      DATABASE_OPERATION_GROUP\r

      DATABASE_PERMISSION_CHANGE_GROUP\r

      DATABASE_PRINCIPAL_CHANGE_GROUP\r

      DATABASE_PRINCIPAL_IMPERSONATION_GROUP\r

      DATABASE_ROLE_MEMBER_CHANGE_GROUP\r

      FAILED_DATABASE_AUTHENTICATION_GROUP\r

      SCHEMA_OBJECT_ACCESS_GROUP\r

      SCHEMA_OBJECT_CHANGE_GROUP\r

      SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r

      SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r

      USER_CHANGE_PASSWORD_GROUP\r

      BATCH_STARTED_GROUP\r

      BATCH_COMPLETED_GROUP\r

      DBCC_GROUP\r

      DATABASE_OWNERSHIP_CHANGE_GROUP\r

      DATABASE_CHANGE_GROUP\r

      LEDGER_OPERATION_GROUP\r

      \r

      These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r

      \r

      For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r

      \r

      For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r

      SELECT\r

      UPDATE\r

      INSERT\r

      DELETE\r

      EXECUTE\r

      RECEIVE\r

      REFERENCES\r

      \r

      The general form for defining an action to be audited is:\r

      {action} ON {object} BY {principal}\r

      \r

      Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r

      \r

      For example:\r

      SELECT on dbo.myTable by public\r

      SELECT on DATABASE::myDatabase by public\r

      SELECT on SCHEMA::mySchema by public\r

      \r

      For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
  isAzureMonitorTargetEnabled:
    type: boolean
    description: "Specifies whether audit events are sent to Azure Monitor. \r

      In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r

      \r

      When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r

      Note that for server level audit you should use the 'master' database as {databaseName}.\r

      \r

      Diagnostic Settings URI format:\r

      PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r

      \r

      For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r

      or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n"
  isManagedIdentityInUse:
    type: boolean
    description: Specifies whether Managed Identity is used to access blob storage
  isStorageSecondaryKeyInUse:
    type: boolean
    description: Specifies whether storageAccountAccessKey value is the storage's secondary key.
  kind:
    type: string
    description: Resource kind.
  name:
    type: string
    description: Resource name.
  queueDelayMs:
    type: integer
    description: "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r

      The default minimum value is 1000 (1 second). The maximum is 2,147,483,647."
  retentionDays:
    type: integer
    description: Specifies the number of days to keep in the audit logs in the storage account.
  state:
    type: string
    description: Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
  storageAccountSubscriptionId:
    type: string
    description: Specifies the blob storage subscription Id.
  storageEndpoint:
    type: string
    description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
  type:
    type: string
    description: Resource type.
type: object
required:
  - kind
  - name
  - state
  - type
inputProperties:
  auditActionsAndGroups:
    type: array
    items:
      type: string
    description: "Specifies the Actions-Groups and Actions to audit.\r

      \r

      The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r

      \r

      BATCH_COMPLETED_GROUP,\r

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r

      FAILED_DATABASE_AUTHENTICATION_GROUP.\r

      \r

      This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r

      \r

      The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r

      \r

      APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r

      BACKUP_RESTORE_GROUP\r

      DATABASE_LOGOUT_GROUP\r

      DATABASE_OBJECT_CHANGE_GROUP\r

      DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r

      DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r

      DATABASE_OPERATION_GROUP\r

      DATABASE_PERMISSION_CHANGE_GROUP\r

      DATABASE_PRINCIPAL_CHANGE_GROUP\r

      DATABASE_PRINCIPAL_IMPERSONATION_GROUP\r

      DATABASE_ROLE_MEMBER_CHANGE_GROUP\r

      FAILED_DATABASE_AUTHENTICATION_GROUP\r

      SCHEMA_OBJECT_ACCESS_GROUP\r

      SCHEMA_OBJECT_CHANGE_GROUP\r

      SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r

      SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r

      USER_CHANGE_PASSWORD_GROUP\r

      BATCH_STARTED_GROUP\r

      BATCH_COMPLETED_GROUP\r

      DBCC_GROUP\r

      DATABASE_OWNERSHIP_CHANGE_GROUP\r

      DATABASE_CHANGE_GROUP\r

      LEDGER_OPERATION_GROUP\r

      \r

      These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r

      \r

      For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r

      \r

      For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r

      SELECT\r

      UPDATE\r

      INSERT\r

      DELETE\r

      EXECUTE\r

      RECEIVE\r

      REFERENCES\r

      \r

      The general form for defining an action to be audited is:\r

      {action} ON {object} BY {principal}\r

      \r

      Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r

      \r

      For example:\r

      SELECT on dbo.myTable by public\r

      SELECT on DATABASE::myDatabase by public\r

      SELECT on SCHEMA::mySchema by public\r

      \r

      For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
  blobAuditingPolicyName:
    type: string
    description: The name of the blob auditing policy.
  databaseName:
    type: string
    description: The name of the database.
  isAzureMonitorTargetEnabled:
    type: boolean
    description: "Specifies whether audit events are sent to Azure Monitor. \r

      In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r

      \r

      When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r

      Note that for server level audit you should use the 'master' database as {databaseName}.\r

      \r

      Diagnostic Settings URI format:\r

      PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r

      \r

      For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r

      or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n"
  isManagedIdentityInUse:
    type: boolean
    description: Specifies whether Managed Identity is used to access blob storage
  isStorageSecondaryKeyInUse:
    type: boolean
    description: Specifies whether storageAccountAccessKey value is the storage's secondary key.
  queueDelayMs:
    type: integer
    description: "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r

      The default minimum value is 1000 (1 second). The maximum is 2,147,483,647."
  resourceGroupName:
    type: string
    description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  retentionDays:
    type: integer
    description: Specifies the number of days to keep in the audit logs in the storage account.
  serverName:
    type: string
    description: The name of the server.
  state:
    $ref: "#/types/azure-native:sql/v20220201preview:BlobAuditingPolicyState"
    description: Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
  storageAccountAccessKey:
    type: string
    description: "Specifies the identifier key of the auditing storage account. \r

      If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r

      Prerequisites for using managed identity authentication:\r

      1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r

      2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r

      For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)"
  storageAccountSubscriptionId:
    type: string
    description: Specifies the blob storage subscription Id.
  storageEndpoint:
    type: string
    description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
requiredInputs:
  - databaseName
  - resourceGroupName
  - serverName
  - state
aliases:
  - type: azure-native:sql:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20150501preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20170301preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20200202preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20200801preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20201101preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20210201preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20210501preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20210801preview:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20211101:DatabaseBlobAuditingPolicy
  - type: azure-native:sql/v20211101preview:DatabaseBlobAuditingPolicy
