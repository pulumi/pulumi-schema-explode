$token: azure-native:containerservice/v20220302preview:getAgentPool
description: Agent Pool.
inputs:
  properties:
    agentPoolName:
      type: string
      description: The name of the agent pool.
    resourceGroupName:
      type: string
      description: The name of the resource group. The name is case insensitive.
    resourceName:
      type: string
      description: The name of the managed cluster resource.
  type: object
  required:
    - agentPoolName
    - resourceGroupName
    - resourceName
outputs:
  description: Agent Pool.
  properties:
    availabilityZones:
      type: array
      items:
        type: string
      description: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    capacityReservationGroupID:
      type: string
      description: AKS will associate the specified agent pool with the Capacity Reservation Group.
    count:
      type: integer
      description: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
    creationData:
      type: object
      $ref: "#/types/azure-native:containerservice/v20220302preview:CreationDataResponse"
      description: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
    currentOrchestratorVersion:
      type: string
      description: If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
    enableAutoScaling:
      type: boolean
      description: Whether to enable auto-scaler
    enableEncryptionAtHost:
      type: boolean
      description: "This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption"
    enableFIPS:
      type: boolean
      description: See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
    enableNodePublicIP:
      type: boolean
      description: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
    enableUltraSSD:
      type: boolean
      description: Whether to enable UltraSSD
    gpuInstanceProfile:
      type: string
      description: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
    hostGroupID:
      type: string
      description: "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts)."
    id:
      type: string
      description: Resource ID.
    kubeletConfig:
      type: object
      $ref: "#/types/azure-native:containerservice/v20220302preview:KubeletConfigResponse"
      description: The Kubelet configuration on the agent pool nodes.
    kubeletDiskType:
      type: string
      description: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
    linuxOSConfig:
      type: object
      $ref: "#/types/azure-native:containerservice/v20220302preview:LinuxOSConfigResponse"
      description: The OS configuration of Linux agent nodes.
    maxCount:
      type: integer
      description: The maximum number of nodes for auto-scaling
    maxPods:
      type: integer
      description: The maximum number of pods that can run on a node.
    messageOfTheDay:
      type: string
      description: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
    minCount:
      type: integer
      description: The minimum number of nodes for auto-scaling
    mode:
      type: string
      description: "A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools"
    name:
      type: string
      description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    nodeImageVersion:
      type: string
      description: The version of node image
    nodeLabels:
      type: object
      additionalProperties:
        type: string
      description: The node labels to be persisted across all nodes in agent pool.
    nodePublicIPPrefixID:
      type: string
      description: "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}"
    nodeTaints:
      type: array
      items:
        type: string
      description: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
    orchestratorVersion:
      type: string
      description: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    osDiskSizeGB:
      type: integer
      description: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
    osDiskType:
      type: string
      description: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
    osSKU:
      type: string
      description: Specifies an OS SKU. This value must not be specified if OSType is Windows.
    osType:
      type: string
      description: The operating system type. The default is Linux.
    podSubnetID:
      type: string
      description: "If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
    powerState:
      type: object
      $ref: "#/types/azure-native:containerservice/v20220302preview:PowerStateResponse"
      description: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
    provisioningState:
      type: string
      description: The current deployment or provisioning state.
    proximityPlacementGroupID:
      type: string
      description: The ID for Proximity Placement Group.
    scaleDownMode:
      type: string
      description: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
    scaleSetEvictionPolicy:
      type: string
      description: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
    scaleSetPriority:
      type: string
      description: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
    spotMaxPrice:
      type: number
      description: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
    tags:
      type: object
      additionalProperties:
        type: string
      description: The tags to be persisted on the agent pool virtual machine scale set.
    type:
      type: string
      description: Resource type
    upgradeSettings:
      type: object
      $ref: "#/types/azure-native:containerservice/v20220302preview:AgentPoolUpgradeSettingsResponse"
      description: Settings for upgrading the agentpool
    vmSize:
      type: string
      description: "VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions"
    vnetSubnetID:
      type: string
      description: "If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
    workloadRuntime:
      type: string
      description: Determines the type of workload a node can run.
  type: object
  required:
    - id
    - name
    - nodeImageVersion
    - provisioningState
    - type
