$token: aws:sagemaker/studioLifecycleConfig:StudioLifecycleConfig
description: "Provides a SageMaker Studio Lifecycle Config resource.


  {{% examples %}}

  ## Example Usage

  {{% /examples %}}


  ## Import


  SageMaker Code Studio Lifecycle Configs can be imported using the `studio_lifecycle_config_name`, e.g.,


  ```sh

  \ $ pulumi import aws:sagemaker/studioLifecycleConfig:StudioLifecycleConfig example example

  ```


  \ "
properties:
  arn:
    type: string
    description: |
      The Amazon Resource Name (ARN) assigned by AWS to this Studio Lifecycle Config.
  studioLifecycleConfigAppType:
    type: string
    description: |
      The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
  studioLifecycleConfigContent:
    type: string
    description: |
      The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
  studioLifecycleConfigName:
    type: string
    description: |
      The name of the Studio Lifecycle Configuration to create.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
required:
  - arn
  - studioLifecycleConfigAppType
  - studioLifecycleConfigContent
  - studioLifecycleConfigName
  - tagsAll
inputProperties:
  studioLifecycleConfigAppType:
    type: string
    description: |
      The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
    willReplaceOnChanges: true
  studioLifecycleConfigContent:
    type: string
    description: |
      The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
    willReplaceOnChanges: true
  studioLifecycleConfigName:
    type: string
    description: |
      The name of the Studio Lifecycle Configuration to create.
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
requiredInputs:
  - studioLifecycleConfigAppType
  - studioLifecycleConfigContent
  - studioLifecycleConfigName
stateInputs:
  description: |
    Input properties used for looking up and filtering StudioLifecycleConfig resources.
  properties:
    arn:
      type: string
      description: |
        The Amazon Resource Name (ARN) assigned by AWS to this Studio Lifecycle Config.
    studioLifecycleConfigAppType:
      type: string
      description: |
        The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.
      willReplaceOnChanges: true
    studioLifecycleConfigContent:
      type: string
      description: |
        The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
      willReplaceOnChanges: true
    studioLifecycleConfigName:
      type: string
      description: |
        The name of the Studio Lifecycle Configuration to create.
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type: object
