$token: aws:ec2/defaultSubnet:DefaultSubnet
properties:
  arn:
    type: string
  assignIpv6AddressOnCreation:
    type: boolean
  availabilityZone:
    type: string
    description: |
      is required
      * The `availability_zone_id`, `cidr_block` and `vpc_id` arguments become computed attributes
      * The default value for `map_public_ip_on_launch` is `true`
  availabilityZoneId:
    type: string
    description: |
      The AZ ID of the subnet
  cidrBlock:
    type: string
    description: |
      The IPv4 CIDR block assigned to the subnet
  customerOwnedIpv4Pool:
    type: string
  enableDns64:
    type: boolean
  enableResourceNameDnsARecordOnLaunch:
    type: boolean
  enableResourceNameDnsAaaaRecordOnLaunch:
    type: boolean
  existingDefaultSubnet:
    type: boolean
  forceDestroy:
    type: boolean
    description: |
      Whether destroying the resource deletes the default subnet. Default: `false`
  ipv6CidrBlock:
    type: string
  ipv6CidrBlockAssociationId:
    type: string
  ipv6Native:
    type: boolean
  mapCustomerOwnedIpOnLaunch:
    type: boolean
  mapPublicIpOnLaunch:
    type: boolean
  outpostArn:
    type: string
  ownerId:
    type: string
  privateDnsHostnameTypeOnLaunch:
    type: string
  tags:
    type: object
    additionalProperties:
      type: string
  tagsAll:
    type: object
    additionalProperties:
      type: string
  vpcId:
    type: string
    description: |
      The ID of the VPC the subnet is in
required:
  - arn
  - availabilityZone
  - availabilityZoneId
  - cidrBlock
  - existingDefaultSubnet
  - ipv6CidrBlock
  - ipv6CidrBlockAssociationId
  - outpostArn
  - ownerId
  - privateDnsHostnameTypeOnLaunch
  - tagsAll
  - vpcId
inputProperties:
  assignIpv6AddressOnCreation:
    type: boolean
  availabilityZone:
    type: string
    description: |
      is required
      * The `availability_zone_id`, `cidr_block` and `vpc_id` arguments become computed attributes
      * The default value for `map_public_ip_on_launch` is `true`
    willReplaceOnChanges: true
  customerOwnedIpv4Pool:
    type: string
  enableDns64:
    type: boolean
  enableResourceNameDnsARecordOnLaunch:
    type: boolean
  enableResourceNameDnsAaaaRecordOnLaunch:
    type: boolean
  forceDestroy:
    type: boolean
    description: |
      Whether destroying the resource deletes the default subnet. Default: `false`
  ipv6CidrBlock:
    type: string
  ipv6Native:
    type: boolean
    willReplaceOnChanges: true
  mapCustomerOwnedIpOnLaunch:
    type: boolean
  mapPublicIpOnLaunch:
    type: boolean
  privateDnsHostnameTypeOnLaunch:
    type: string
  tags:
    type: object
    additionalProperties:
      type: string
requiredInputs:
  - availabilityZone
stateInputs:
  description: |
    Input properties used for looking up and filtering DefaultSubnet resources.
  properties:
    arn:
      type: string
    assignIpv6AddressOnCreation:
      type: boolean
    availabilityZone:
      type: string
      description: |
        is required
        * The `availability_zone_id`, `cidr_block` and `vpc_id` arguments become computed attributes
        * The default value for `map_public_ip_on_launch` is `true`
      willReplaceOnChanges: true
    availabilityZoneId:
      type: string
      description: |
        The AZ ID of the subnet
    cidrBlock:
      type: string
      description: |
        The IPv4 CIDR block assigned to the subnet
    customerOwnedIpv4Pool:
      type: string
    enableDns64:
      type: boolean
    enableResourceNameDnsARecordOnLaunch:
      type: boolean
    enableResourceNameDnsAaaaRecordOnLaunch:
      type: boolean
    existingDefaultSubnet:
      type: boolean
    forceDestroy:
      type: boolean
      description: |
        Whether destroying the resource deletes the default subnet. Default: `false`
    ipv6CidrBlock:
      type: string
    ipv6CidrBlockAssociationId:
      type: string
    ipv6Native:
      type: boolean
      willReplaceOnChanges: true
    mapCustomerOwnedIpOnLaunch:
      type: boolean
    mapPublicIpOnLaunch:
      type: boolean
    outpostArn:
      type: string
    ownerId:
      type: string
    privateDnsHostnameTypeOnLaunch:
      type: string
    tags:
      type: object
      additionalProperties:
        type: string
    tagsAll:
      type: object
      additionalProperties:
        type: string
    vpcId:
      type: string
      description: |
        The ID of the VPC the subnet is in
  type: object
