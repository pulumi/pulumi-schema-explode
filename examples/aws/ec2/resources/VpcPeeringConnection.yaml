$token: aws:ec2/vpcPeeringConnection:VpcPeeringConnection
properties:
  acceptStatus:
    type: string
    description: |
      The status of the VPC Peering Connection request.
  accepter:
    $ref: "#/types/aws:ec2/VpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter"
    description: |
      An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
      the peering connection (a maximum of one).
  autoAccept:
    type: boolean
    description: |
      Accept the peering (both VPCs need to be in the same AWS account and region).
  peerOwnerId:
    type: string
    description: |
      The AWS account ID of the owner of the peer VPC.
      Defaults to the account ID the [AWS provider](https://www.terraform.io/docs/providers/aws/index.html) is currently connected to.
  peerRegion:
    type: string
    description: |
      The region of the accepter VPC of the VPC Peering Connection. `auto_accept` must be `false`,
      and use the `aws.ec2.VpcPeeringConnectionAccepter` to manage the accepter side.
  peerVpcId:
    type: string
    description: |
      The ID of the VPC with which you are creating the VPC Peering Connection.
  requester:
    $ref: "#/types/aws:ec2/VpcPeeringConnectionRequester:VpcPeeringConnectionRequester"
    description: |
      A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
      the peering connection (a maximum of one).
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  vpcId:
    type: string
    description: |
      The ID of the requester VPC.
required:
  - acceptStatus
  - accepter
  - peerOwnerId
  - peerRegion
  - peerVpcId
  - requester
  - tagsAll
  - vpcId
inputProperties:
  accepter:
    $ref: "#/types/aws:ec2/VpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter"
    description: |
      An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
      the peering connection (a maximum of one).
  autoAccept:
    type: boolean
    description: |
      Accept the peering (both VPCs need to be in the same AWS account and region).
  peerOwnerId:
    type: string
    description: |
      The AWS account ID of the owner of the peer VPC.
      Defaults to the account ID the [AWS provider](https://www.terraform.io/docs/providers/aws/index.html) is currently connected to.
    willReplaceOnChanges: true
  peerRegion:
    type: string
    description: |
      The region of the accepter VPC of the VPC Peering Connection. `auto_accept` must be `false`,
      and use the `aws.ec2.VpcPeeringConnectionAccepter` to manage the accepter side.
    willReplaceOnChanges: true
  peerVpcId:
    type: string
    description: |
      The ID of the VPC with which you are creating the VPC Peering Connection.
    willReplaceOnChanges: true
  requester:
    $ref: "#/types/aws:ec2/VpcPeeringConnectionRequester:VpcPeeringConnectionRequester"
    description: |
      A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
      the peering connection (a maximum of one).
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  vpcId:
    type: string
    description: |
      The ID of the requester VPC.
    willReplaceOnChanges: true
requiredInputs:
  - peerVpcId
  - vpcId
stateInputs:
  description: |
    Input properties used for looking up and filtering VpcPeeringConnection resources.
  properties:
    acceptStatus:
      type: string
      description: |
        The status of the VPC Peering Connection request.
    accepter:
      $ref: "#/types/aws:ec2/VpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter"
      description: |
        An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
        the peering connection (a maximum of one).
    autoAccept:
      type: boolean
      description: |
        Accept the peering (both VPCs need to be in the same AWS account and region).
    peerOwnerId:
      type: string
      description: |
        The AWS account ID of the owner of the peer VPC.
        Defaults to the account ID the [AWS provider](https://www.terraform.io/docs/providers/aws/index.html) is currently connected to.
      willReplaceOnChanges: true
    peerRegion:
      type: string
      description: |
        The region of the accepter VPC of the VPC Peering Connection. `auto_accept` must be `false`,
        and use the `aws.ec2.VpcPeeringConnectionAccepter` to manage the accepter side.
      willReplaceOnChanges: true
    peerVpcId:
      type: string
      description: |
        The ID of the VPC with which you are creating the VPC Peering Connection.
      willReplaceOnChanges: true
    requester:
      $ref: "#/types/aws:ec2/VpcPeeringConnectionRequester:VpcPeeringConnectionRequester"
      description: |
        A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
        the peering connection (a maximum of one).
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    vpcId:
      type: string
      description: |
        The ID of the requester VPC.
      willReplaceOnChanges: true
  type: object
