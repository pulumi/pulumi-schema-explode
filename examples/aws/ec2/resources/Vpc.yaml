$token: aws:ec2/vpc:Vpc
properties:
  arn:
    type: string
    description: |
      Amazon Resource Name (ARN) of VPC
  assignGeneratedIpv6CidrBlock:
    type: boolean
    description: |
      Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. Default is `false`. Conflicts with `ipv6_ipam_pool_id`
  cidrBlock:
    type: string
    description: |
      The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length`.
  defaultNetworkAclId:
    type: string
    description: |
      The ID of the network ACL created by default on VPC creation
  defaultRouteTableId:
    type: string
    description: |
      The ID of the route table created by default on VPC creation
  defaultSecurityGroupId:
    type: string
    description: |
      The ID of the security group created by default on VPC creation
  dhcpOptionsId:
    type: string
  enableClassiclink:
    type: boolean
    description: |
      A boolean flag to enable/disable ClassicLink
      for the VPC. Only valid in regions and accounts that support EC2 Classic.
      See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
    deprecationMessage: With the retirement of EC2-Classic the enable_classiclink attribute has been deprecated and will be removed in a future version.
  enableClassiclinkDnsSupport:
    type: boolean
    description: |
      A boolean flag to enable/disable ClassicLink DNS Support for the VPC.
      Only valid in regions and accounts that support EC2 Classic.
    deprecationMessage: With the retirement of EC2-Classic the enable_classiclink_dns_support attribute has been deprecated and will be removed in a future version.
  enableDnsHostnames:
    type: boolean
    description: |
      A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
  enableDnsSupport:
    type: boolean
    description: |
      A boolean flag to enable/disable DNS support in the VPC. Defaults true.
  instanceTenancy:
    type: string
    description: |
      A tenancy option for instances launched into the VPC. Default is `default`, which ensures that EC2 instances launched in this VPC use the EC2 instance tenancy attribute specified when the EC2 instance is launched. The only other option is `dedicated`, which ensures that EC2 instances launched in this VPC are run on dedicated tenancy instances regardless of the tenancy attribute specified at launch. This has a dedicated per region fee of $2 per hour, plus an hourly per instance usage fee.
  ipv4IpamPoolId:
    type: string
    description: |
      The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
  ipv4NetmaskLength:
    type: integer
    description: |
      The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a `ipv4_ipam_pool_id`.
  ipv6AssociationId:
    type: string
    description: |
      The association ID for the IPv6 CIDR block.
  ipv6CidrBlock:
    type: string
    description: |
      IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`.
  ipv6CidrBlockNetworkBorderGroup:
    type: string
    description: |
      By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones.
  ipv6IpamPoolId:
    type: string
    description: |
      IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.
  ipv6NetmaskLength:
    type: integer
    description: |
      Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`.
  mainRouteTableId:
    type: string
    description: |
      The ID of the main route table associated with
      this VPC. Note that you can change a VPC's main route table by using an
      `aws.ec2.MainRouteTableAssociation`.
  ownerId:
    type: string
    description: |
      The ID of the AWS account that owns the VPC.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
required:
  - arn
  - cidrBlock
  - defaultNetworkAclId
  - defaultRouteTableId
  - defaultSecurityGroupId
  - dhcpOptionsId
  - enableClassiclink
  - enableClassiclinkDnsSupport
  - enableDnsHostnames
  - ipv6AssociationId
  - ipv6CidrBlock
  - ipv6CidrBlockNetworkBorderGroup
  - mainRouteTableId
  - ownerId
  - tagsAll
inputProperties:
  assignGeneratedIpv6CidrBlock:
    type: boolean
    description: |
      Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. Default is `false`. Conflicts with `ipv6_ipam_pool_id`
  cidrBlock:
    type: string
    description: |
      The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length`.
    willReplaceOnChanges: true
  enableClassiclink:
    type: boolean
    description: |
      A boolean flag to enable/disable ClassicLink
      for the VPC. Only valid in regions and accounts that support EC2 Classic.
      See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
    deprecationMessage: With the retirement of EC2-Classic the enable_classiclink attribute has been deprecated and will be removed in a future version.
  enableClassiclinkDnsSupport:
    type: boolean
    description: |
      A boolean flag to enable/disable ClassicLink DNS Support for the VPC.
      Only valid in regions and accounts that support EC2 Classic.
    deprecationMessage: With the retirement of EC2-Classic the enable_classiclink_dns_support attribute has been deprecated and will be removed in a future version.
  enableDnsHostnames:
    type: boolean
    description: |
      A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
  enableDnsSupport:
    type: boolean
    description: |
      A boolean flag to enable/disable DNS support in the VPC. Defaults true.
  instanceTenancy:
    type: string
    description: |
      A tenancy option for instances launched into the VPC. Default is `default`, which ensures that EC2 instances launched in this VPC use the EC2 instance tenancy attribute specified when the EC2 instance is launched. The only other option is `dedicated`, which ensures that EC2 instances launched in this VPC are run on dedicated tenancy instances regardless of the tenancy attribute specified at launch. This has a dedicated per region fee of $2 per hour, plus an hourly per instance usage fee.
  ipv4IpamPoolId:
    type: string
    description: |
      The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
    willReplaceOnChanges: true
  ipv4NetmaskLength:
    type: integer
    description: |
      The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a `ipv4_ipam_pool_id`.
    willReplaceOnChanges: true
  ipv6CidrBlock:
    type: string
    description: |
      IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`.
  ipv6CidrBlockNetworkBorderGroup:
    type: string
    description: |
      By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones.
  ipv6IpamPoolId:
    type: string
    description: |
      IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.
  ipv6NetmaskLength:
    type: integer
    description: |
      Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
stateInputs:
  description: |
    Input properties used for looking up and filtering Vpc resources.
  properties:
    arn:
      type: string
      description: |
        Amazon Resource Name (ARN) of VPC
    assignGeneratedIpv6CidrBlock:
      type: boolean
      description: |
        Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. Default is `false`. Conflicts with `ipv6_ipam_pool_id`
    cidrBlock:
      type: string
      description: |
        The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length`.
      willReplaceOnChanges: true
    defaultNetworkAclId:
      type: string
      description: |
        The ID of the network ACL created by default on VPC creation
    defaultRouteTableId:
      type: string
      description: |
        The ID of the route table created by default on VPC creation
    defaultSecurityGroupId:
      type: string
      description: |
        The ID of the security group created by default on VPC creation
    dhcpOptionsId:
      type: string
    enableClassiclink:
      type: boolean
      description: |
        A boolean flag to enable/disable ClassicLink
        for the VPC. Only valid in regions and accounts that support EC2 Classic.
        See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
      deprecationMessage: With the retirement of EC2-Classic the enable_classiclink attribute has been deprecated and will be removed in a future version.
    enableClassiclinkDnsSupport:
      type: boolean
      description: |
        A boolean flag to enable/disable ClassicLink DNS Support for the VPC.
        Only valid in regions and accounts that support EC2 Classic.
      deprecationMessage: With the retirement of EC2-Classic the enable_classiclink_dns_support attribute has been deprecated and will be removed in a future version.
    enableDnsHostnames:
      type: boolean
      description: |
        A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
    enableDnsSupport:
      type: boolean
      description: |
        A boolean flag to enable/disable DNS support in the VPC. Defaults true.
    instanceTenancy:
      type: string
      description: |
        A tenancy option for instances launched into the VPC. Default is `default`, which ensures that EC2 instances launched in this VPC use the EC2 instance tenancy attribute specified when the EC2 instance is launched. The only other option is `dedicated`, which ensures that EC2 instances launched in this VPC are run on dedicated tenancy instances regardless of the tenancy attribute specified at launch. This has a dedicated per region fee of $2 per hour, plus an hourly per instance usage fee.
    ipv4IpamPoolId:
      type: string
      description: |
        The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
      willReplaceOnChanges: true
    ipv4NetmaskLength:
      type: integer
      description: |
        The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a `ipv4_ipam_pool_id`.
      willReplaceOnChanges: true
    ipv6AssociationId:
      type: string
      description: |
        The association ID for the IPv6 CIDR block.
    ipv6CidrBlock:
      type: string
      description: |
        IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`.
    ipv6CidrBlockNetworkBorderGroup:
      type: string
      description: |
        By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones.
    ipv6IpamPoolId:
      type: string
      description: |
        IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.
    ipv6NetmaskLength:
      type: integer
      description: |
        Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`.
    mainRouteTableId:
      type: string
      description: |
        The ID of the main route table associated with
        this VPC. Note that you can change a VPC's main route table by using an
        `aws.ec2.MainRouteTableAssociation`.
    ownerId:
      type: string
      description: |
        The ID of the AWS account that owns the VPC.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type: object
