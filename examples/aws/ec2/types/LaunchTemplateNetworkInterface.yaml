$token: aws:ec2/LaunchTemplateNetworkInterface:LaunchTemplateNetworkInterface
properties:
  associateCarrierIpAddress:
    type: string
    description: |
      Associate a Carrier IP address with `eth0` for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value.
    language:
      python:
        mapCase: false
  associatePublicIpAddress:
    type: string
    description: |
      Associate a public ip address with the network interface.  Boolean value.
    language:
      python:
        mapCase: false
  deleteOnTermination:
    type: string
    description: |
      Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
    language:
      python:
        mapCase: false
  description:
    type: string
    description: |
      Description of the network interface.
    language:
      python:
        mapCase: false
  deviceIndex:
    type: integer
    description: |
      The integer index of the network interface attachment.
    language:
      python:
        mapCase: false
  interfaceType:
    type: string
    description: |
      The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
    language:
      python:
        mapCase: false
  ipv4AddressCount:
    type: integer
    description: |
      The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4_addresses`
    language:
      python:
        mapCase: false
  ipv4Addresses:
    type: array
    items:
      type: string
    description: |
      One or more private IPv4 addresses to associate. Conflicts with `ipv4_address_count`
    language:
      python:
        mapCase: false
  ipv4PrefixCount:
    type: integer
    description: |
      The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with `ipv4_prefixes`
    language:
      python:
        mapCase: false
  ipv4Prefixes:
    type: array
    items:
      type: string
    description: |
      One or more IPv4 prefixes to be assigned to the network interface. Conflicts with `ipv4_prefix_count`
    language:
      python:
        mapCase: false
  ipv6AddressCount:
    type: integer
    description: |
      The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6_addresses`
    language:
      python:
        mapCase: false
  ipv6Addresses:
    type: array
    items:
      type: string
    description: |
      One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6_address_count`
    language:
      python:
        mapCase: false
  ipv6PrefixCount:
    type: integer
    description: |
      The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with `ipv6_prefixes`
    language:
      python:
        mapCase: false
  ipv6Prefixes:
    type: array
    items:
      type: string
    description: |
      One or more IPv6 prefixes to be assigned to the network interface. Conflicts with `ipv6_prefix_count`
    language:
      python:
        mapCase: false
  networkCardIndex:
    type: integer
    description: |
      The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    language:
      python:
        mapCase: false
  networkInterfaceId:
    type: string
    description: |
      The ID of the network interface to attach.
    language:
      python:
        mapCase: false
  privateIpAddress:
    type: string
    description: |
      The primary private IPv4 address.
    language:
      python:
        mapCase: false
  securityGroups:
    type: array
    items:
      type: string
    description: |
      A list of security group IDs to associate.
    language:
      python:
        mapCase: false
  subnetId:
    type: string
    description: |
      The VPC Subnet ID to associate.
    language:
      python:
        mapCase: false
type: object
