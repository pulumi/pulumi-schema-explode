$token: aws:ec2/getSubnet:getSubnet
inputs:
  description: |
    A collection of arguments for invoking getSubnet.
  properties:
    availabilityZone:
      type: string
      description: |
        Availability zone where the subnet must reside.
    availabilityZoneId:
      type: string
      description: |
        ID of the Availability Zone for the subnet. This argument is not supported in all regions or partitions. If necessary, use `availability_zone` instead.
    cidrBlock:
      type: string
      description: |
        CIDR block of the desired subnet.
    defaultForAz:
      type: boolean
      description: |
        Whether the desired subnet must be the default subnet for its associated availability zone.
    filters:
      type: array
      items:
        $ref: "#/types/aws:ec2/getSubnetFilter:getSubnetFilter"
      description: |
        Configuration block. Detailed below.
    id:
      type: string
      description: |
        ID of the specific subnet to retrieve.
    ipv6CidrBlock:
      type: string
      description: |
        IPv6 CIDR block of the desired subnet.
    state:
      type: string
      description: |
        State that the desired subnet must have.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags, each pair of which must exactly match a pair on the desired subnet.
    vpcId:
      type: string
      description: |
        ID of the VPC that the desired subnet belongs to.
  type: object
outputs:
  description: |
    A collection of values returned by getSubnet.
  properties:
    arn:
      type: string
      description: |
        ARN of the subnet.
    assignIpv6AddressOnCreation:
      type: boolean
      description: |
        Whether an IPv6 address is assigned on creation.
    availabilityZone:
      type: string
    availabilityZoneId:
      type: string
    availableIpAddressCount:
      type: integer
      description: |
        Available IP addresses of the subnet.
    cidrBlock:
      type: string
    customerOwnedIpv4Pool:
      type: string
      description: |
        Identifier of customer owned IPv4 address pool.
    defaultForAz:
      type: boolean
    enableDns64:
      type: boolean
      description: |
        Whether DNS queries made to the Amazon-provided DNS Resolver in this subnet return synthetic IPv6 addresses for IPv4-only destinations.
    enableResourceNameDnsARecordOnLaunch:
      type: boolean
      description: |
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecordOnLaunch:
      type: boolean
      description: |
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    filters:
      type: array
      items:
        $ref: "#/types/aws:ec2/getSubnetFilter:getSubnetFilter"
    id:
      type: string
    ipv6CidrBlock:
      type: string
    ipv6CidrBlockAssociationId:
      type: string
      description: |
        Association ID of the IPv6 CIDR block.
    ipv6Native:
      type: boolean
      description: |
        Whether this is an IPv6-only subnet.
    mapCustomerOwnedIpOnLaunch:
      type: boolean
      description: |
        Whether customer owned IP addresses are assigned on network interface creation.
    mapPublicIpOnLaunch:
      type: boolean
      description: |
        Whether public IP addresses are assigned on instance launch.
    outpostArn:
      type: string
      description: |
        ARN of the Outpost.
    ownerId:
      type: string
      description: |
        ID of the AWS account that owns the subnet.
    privateDnsHostnameTypeOnLaunch:
      type: string
      description: |
        The type of hostnames assigned to instances in the subnet at launch.
    state:
      type: string
    tags:
      type: object
      additionalProperties:
        type: string
    vpcId:
      type: string
  type: object
  required:
    - arn
    - assignIpv6AddressOnCreation
    - availabilityZone
    - availabilityZoneId
    - availableIpAddressCount
    - cidrBlock
    - customerOwnedIpv4Pool
    - defaultForAz
    - enableDns64
    - enableResourceNameDnsARecordOnLaunch
    - enableResourceNameDnsAaaaRecordOnLaunch
    - id
    - ipv6CidrBlock
    - ipv6CidrBlockAssociationId
    - ipv6Native
    - mapCustomerOwnedIpOnLaunch
    - mapPublicIpOnLaunch
    - outpostArn
    - ownerId
    - privateDnsHostnameTypeOnLaunch
    - state
    - tags
    - vpcId
