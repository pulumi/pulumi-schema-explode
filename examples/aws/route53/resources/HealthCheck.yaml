$token: aws:route53/healthCheck:HealthCheck
properties:
  arn:
    type: string
    description: |
      The Amazon Resource Name (ARN) of the Health Check.
  childHealthThreshold:
    type: integer
    description: |
      The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
  childHealthchecks:
    type: array
    items:
      type: string
    description: |
      For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
  cloudwatchAlarmName:
    type: string
    description: |
      The name of the CloudWatch alarm.
  cloudwatchAlarmRegion:
    type: string
    description: |
      The CloudWatchRegion that the CloudWatch alarm was created in.
  disabled:
    type: boolean
    description: |
      A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
      * For health checks that check the health of endpoints, Route5 53 stops submitting requests to your application, server, or other resource.
      * For calculated health checks, Route 53 stops aggregating the status of the referenced health checks.
      * For health checks that monitor CloudWatch alarms, Route 53 stops monitoring the corresponding CloudWatch metrics.
  enableSni:
    type: boolean
    description: |
      A boolean value that indicates whether Route53 should send the `fqdn` to the endpoint when performing the health check. This defaults to AWS' defaults: when the `type` is "HTTPS" `enable_sni` defaults to `true`, when `type` is anything else `enable_sni` defaults to `false`.
  failureThreshold:
    type: integer
    description: |
      The number of consecutive health checks that an endpoint must pass or fail.
  fqdn:
    type: string
    description: |
      The fully qualified domain name of the endpoint to be checked.
  insufficientDataHealthStatus:
    type: string
    description: |
      The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are `Healthy` , `Unhealthy` and `LastKnownStatus`.
  invertHealthcheck:
    type: boolean
    description: |
      A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
  ipAddress:
    type: string
    description: |
      The IP address of the endpoint to be checked.
  measureLatency:
    type: boolean
    description: |
      A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
  port:
    type: integer
    description: |
      The port of the endpoint to be checked.
  referenceName:
    type: string
    description: |
      This is a reference name used in Caller Reference
      (helpful for identifying single health_check set amongst others)
  regions:
    type: array
    items:
      type: string
    description: |
      A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
  requestInterval:
    type: integer
    description: |
      The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
  resourcePath:
    type: string
    description: |
      The path that you want Amazon Route 53 to request when performing health checks.
  routingControlArn:
    type: string
    description: |
      The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is `RECOVERY_CONTROL`
  searchString:
    type: string
    description: |
      String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with `HTTP_STR_MATCH` and `HTTPS_STR_MATCH`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the health check. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type:
    type: string
    description: |
      The protocol to use when performing health checks. Valid values are `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, `HTTPS_STR_MATCH`, `TCP`, `CALCULATED`, `CLOUDWATCH_METRIC` and `RECOVERY_CONTROL`.
required:
  - arn
  - enableSni
  - failureThreshold
  - tagsAll
  - type
inputProperties:
  childHealthThreshold:
    type: integer
    description: |
      The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
  childHealthchecks:
    type: array
    items:
      type: string
    description: |
      For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
  cloudwatchAlarmName:
    type: string
    description: |
      The name of the CloudWatch alarm.
  cloudwatchAlarmRegion:
    type: string
    description: |
      The CloudWatchRegion that the CloudWatch alarm was created in.
  disabled:
    type: boolean
    description: |
      A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
      * For health checks that check the health of endpoints, Route5 53 stops submitting requests to your application, server, or other resource.
      * For calculated health checks, Route 53 stops aggregating the status of the referenced health checks.
      * For health checks that monitor CloudWatch alarms, Route 53 stops monitoring the corresponding CloudWatch metrics.
  enableSni:
    type: boolean
    description: |
      A boolean value that indicates whether Route53 should send the `fqdn` to the endpoint when performing the health check. This defaults to AWS' defaults: when the `type` is "HTTPS" `enable_sni` defaults to `true`, when `type` is anything else `enable_sni` defaults to `false`.
  failureThreshold:
    type: integer
    description: |
      The number of consecutive health checks that an endpoint must pass or fail.
  fqdn:
    type: string
    description: |
      The fully qualified domain name of the endpoint to be checked.
  insufficientDataHealthStatus:
    type: string
    description: |
      The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are `Healthy` , `Unhealthy` and `LastKnownStatus`.
  invertHealthcheck:
    type: boolean
    description: |
      A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
  ipAddress:
    type: string
    description: |
      The IP address of the endpoint to be checked.
  measureLatency:
    type: boolean
    description: |
      A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
    willReplaceOnChanges: true
  port:
    type: integer
    description: |
      The port of the endpoint to be checked.
  referenceName:
    type: string
    description: |
      This is a reference name used in Caller Reference
      (helpful for identifying single health_check set amongst others)
    willReplaceOnChanges: true
  regions:
    type: array
    items:
      type: string
    description: |
      A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
  requestInterval:
    type: integer
    description: |
      The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
    willReplaceOnChanges: true
  resourcePath:
    type: string
    description: |
      The path that you want Amazon Route 53 to request when performing health checks.
  routingControlArn:
    type: string
    description: |
      The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is `RECOVERY_CONTROL`
    willReplaceOnChanges: true
  searchString:
    type: string
    description: |
      String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with `HTTP_STR_MATCH` and `HTTPS_STR_MATCH`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the health check. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  type:
    type: string
    description: |
      The protocol to use when performing health checks. Valid values are `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, `HTTPS_STR_MATCH`, `TCP`, `CALCULATED`, `CLOUDWATCH_METRIC` and `RECOVERY_CONTROL`.
    willReplaceOnChanges: true
requiredInputs:
  - type
stateInputs:
  description: |
    Input properties used for looking up and filtering HealthCheck resources.
  properties:
    arn:
      type: string
      description: |
        The Amazon Resource Name (ARN) of the Health Check.
    childHealthThreshold:
      type: integer
      description: |
        The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
    childHealthchecks:
      type: array
      items:
        type: string
      description: |
        For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
    cloudwatchAlarmName:
      type: string
      description: |
        The name of the CloudWatch alarm.
    cloudwatchAlarmRegion:
      type: string
      description: |
        The CloudWatchRegion that the CloudWatch alarm was created in.
    disabled:
      type: boolean
      description: |
        A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
        * For health checks that check the health of endpoints, Route5 53 stops submitting requests to your application, server, or other resource.
        * For calculated health checks, Route 53 stops aggregating the status of the referenced health checks.
        * For health checks that monitor CloudWatch alarms, Route 53 stops monitoring the corresponding CloudWatch metrics.
    enableSni:
      type: boolean
      description: |
        A boolean value that indicates whether Route53 should send the `fqdn` to the endpoint when performing the health check. This defaults to AWS' defaults: when the `type` is "HTTPS" `enable_sni` defaults to `true`, when `type` is anything else `enable_sni` defaults to `false`.
    failureThreshold:
      type: integer
      description: |
        The number of consecutive health checks that an endpoint must pass or fail.
    fqdn:
      type: string
      description: |
        The fully qualified domain name of the endpoint to be checked.
    insufficientDataHealthStatus:
      type: string
      description: |
        The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are `Healthy` , `Unhealthy` and `LastKnownStatus`.
    invertHealthcheck:
      type: boolean
      description: |
        A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
    ipAddress:
      type: string
      description: |
        The IP address of the endpoint to be checked.
    measureLatency:
      type: boolean
      description: |
        A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
      willReplaceOnChanges: true
    port:
      type: integer
      description: |
        The port of the endpoint to be checked.
    referenceName:
      type: string
      description: |
        This is a reference name used in Caller Reference
        (helpful for identifying single health_check set amongst others)
      willReplaceOnChanges: true
    regions:
      type: array
      items:
        type: string
      description: |
        A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
    requestInterval:
      type: integer
      description: |
        The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
      willReplaceOnChanges: true
    resourcePath:
      type: string
      description: |
        The path that you want Amazon Route 53 to request when performing health checks.
    routingControlArn:
      type: string
      description: |
        The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is `RECOVERY_CONTROL`
      willReplaceOnChanges: true
    searchString:
      type: string
      description: |
        String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with `HTTP_STR_MATCH` and `HTTPS_STR_MATCH`.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the health check. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    type:
      type: string
      description: |
        The protocol to use when performing health checks. Valid values are `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, `HTTPS_STR_MATCH`, `TCP`, `CALCULATED`, `CLOUDWATCH_METRIC` and `RECOVERY_CONTROL`.
      willReplaceOnChanges: true
  type: object
