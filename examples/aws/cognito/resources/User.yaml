$token: aws:cognito/user:User
properties:
  attributes:
    type: object
    additionalProperties:
      type: string
    description: |
      A map that contains user attributes and attribute values to be set for the user.
  clientMetadata:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the `client_metadata` value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
  creationDate:
    type: string
  desiredDeliveryMediums:
    type: array
    items:
      type: string
    description: |
      A list of mediums to the welcome message will be sent through. Allowed values are `EMAIL` and `SMS`. If it's provided, make sure you have also specified `email` attribute for the `EMAIL` medium and `phone_number` for the `SMS`. More than one value can be specified. Amazon Cognito does not store the `desired_delivery_mediums` value. Defaults to `["SMS"]`.
  enabled:
    type: boolean
    description: |
      Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the `enabled` value. The behavior can be changed with `message_action` argument. Defaults to `true`.
  forceAliasCreation:
    type: boolean
    description: |
      If this parameter is set to True and the `phone_number` or `email` address specified in the `attributes` parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the `force_alias_creation` value. Defaults to `false`.
  lastModifiedDate:
    type: string
  messageAction:
    type: string
    description: |
      Set to `RESEND` to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to `SUPPRESS` to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the `message_action` value.
  mfaSettingLists:
    type: array
    items:
      type: string
  password:
    type: string
    description: |
      The user's permanent password. This password must conform to the password policy specified by user pool the user belongs to. The welcome message always contains only `temporary_password` value. You can suppress sending the welcome message with the `message_action` argument. Amazon Cognito does not store the `password` value. Conflicts with `temporary_password`.
  preferredMfaSetting:
    type: string
  status:
    type: string
    description: |
      current user status.
  sub:
    type: string
    description: |
      unique user id that is never reassignable to another user.
  temporaryPassword:
    type: string
    description: |
      The user's temporary password. Conflicts with `password`.
  userPoolId:
    type: string
    description: |
      The user pool ID for the user pool where the user will be created.
  username:
    type: string
  validationData:
    type: object
    additionalProperties:
      type: string
    description: |
      The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the `validation_data` value. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
required:
  - creationDate
  - lastModifiedDate
  - mfaSettingLists
  - preferredMfaSetting
  - status
  - sub
  - userPoolId
  - username
inputProperties:
  attributes:
    type: object
    additionalProperties:
      type: string
    description: |
      A map that contains user attributes and attribute values to be set for the user.
  clientMetadata:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the `client_metadata` value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
  desiredDeliveryMediums:
    type: array
    items:
      type: string
    description: |
      A list of mediums to the welcome message will be sent through. Allowed values are `EMAIL` and `SMS`. If it's provided, make sure you have also specified `email` attribute for the `EMAIL` medium and `phone_number` for the `SMS`. More than one value can be specified. Amazon Cognito does not store the `desired_delivery_mediums` value. Defaults to `["SMS"]`.
  enabled:
    type: boolean
    description: |
      Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the `enabled` value. The behavior can be changed with `message_action` argument. Defaults to `true`.
  forceAliasCreation:
    type: boolean
    description: |
      If this parameter is set to True and the `phone_number` or `email` address specified in the `attributes` parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the `force_alias_creation` value. Defaults to `false`.
  messageAction:
    type: string
    description: |
      Set to `RESEND` to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to `SUPPRESS` to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the `message_action` value.
  password:
    type: string
    description: |
      The user's permanent password. This password must conform to the password policy specified by user pool the user belongs to. The welcome message always contains only `temporary_password` value. You can suppress sending the welcome message with the `message_action` argument. Amazon Cognito does not store the `password` value. Conflicts with `temporary_password`.
  temporaryPassword:
    type: string
    description: |
      The user's temporary password. Conflicts with `password`.
  userPoolId:
    type: string
    description: |
      The user pool ID for the user pool where the user will be created.
    willReplaceOnChanges: true
  username:
    type: string
    willReplaceOnChanges: true
  validationData:
    type: object
    additionalProperties:
      type: string
    description: |
      The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the `validation_data` value. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
requiredInputs:
  - userPoolId
  - username
stateInputs:
  description: |
    Input properties used for looking up and filtering User resources.
  properties:
    attributes:
      type: object
      additionalProperties:
        type: string
      description: |
        A map that contains user attributes and attribute values to be set for the user.
    clientMetadata:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the `client_metadata` value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
    creationDate:
      type: string
    desiredDeliveryMediums:
      type: array
      items:
        type: string
      description: |
        A list of mediums to the welcome message will be sent through. Allowed values are `EMAIL` and `SMS`. If it's provided, make sure you have also specified `email` attribute for the `EMAIL` medium and `phone_number` for the `SMS`. More than one value can be specified. Amazon Cognito does not store the `desired_delivery_mediums` value. Defaults to `["SMS"]`.
    enabled:
      type: boolean
      description: |
        Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the `enabled` value. The behavior can be changed with `message_action` argument. Defaults to `true`.
    forceAliasCreation:
      type: boolean
      description: |
        If this parameter is set to True and the `phone_number` or `email` address specified in the `attributes` parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the `force_alias_creation` value. Defaults to `false`.
    lastModifiedDate:
      type: string
    messageAction:
      type: string
      description: |
        Set to `RESEND` to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to `SUPPRESS` to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the `message_action` value.
    mfaSettingLists:
      type: array
      items:
        type: string
    password:
      type: string
      description: |
        The user's permanent password. This password must conform to the password policy specified by user pool the user belongs to. The welcome message always contains only `temporary_password` value. You can suppress sending the welcome message with the `message_action` argument. Amazon Cognito does not store the `password` value. Conflicts with `temporary_password`.
    preferredMfaSetting:
      type: string
    status:
      type: string
      description: |
        current user status.
    sub:
      type: string
      description: |
        unique user id that is never reassignable to another user.
    temporaryPassword:
      type: string
      description: |
        The user's temporary password. Conflicts with `password`.
    userPoolId:
      type: string
      description: |
        The user pool ID for the user pool where the user will be created.
      willReplaceOnChanges: true
    username:
      type: string
      willReplaceOnChanges: true
    validationData:
      type: object
      additionalProperties:
        type: string
      description: |
        The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the `validation_data` value. For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html).
  type: object
