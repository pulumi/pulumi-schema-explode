$token: aws:directconnect/linkAggregationGroup:LinkAggregationGroup
properties:
  arn:
    type: string
    description: |
      The ARN of the LAG.
  connectionId:
    type: string
    description: |
      The ID of an existing dedicated connection to migrate to the LAG.
  connectionsBandwidth:
    type: string
    description: |
      The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
  forceDestroy:
    type: boolean
    description: |
      A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.
  hasLogicalRedundancy:
    type: string
    description: |
      Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).
  jumboFrameCapable:
    type: boolean
  location:
    type: string
    description: |
      The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
  name:
    type: string
    description: |
      The name of the LAG.
  ownerAccountId:
    type: string
    description: |
      The ID of the AWS account that owns the LAG.
  providerName:
    type: string
    description: |
      The name of the service provider associated with the LAG.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
required:
  - arn
  - connectionsBandwidth
  - hasLogicalRedundancy
  - jumboFrameCapable
  - location
  - name
  - ownerAccountId
  - providerName
  - tagsAll
inputProperties:
  connectionId:
    type: string
    description: |
      The ID of an existing dedicated connection to migrate to the LAG.
    willReplaceOnChanges: true
  connectionsBandwidth:
    type: string
    description: |
      The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
    willReplaceOnChanges: true
  forceDestroy:
    type: boolean
    description: |
      A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.
  location:
    type: string
    description: |
      The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
    willReplaceOnChanges: true
  name:
    type: string
    description: |
      The name of the LAG.
  providerName:
    type: string
    description: |
      The name of the service provider associated with the LAG.
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
requiredInputs:
  - connectionsBandwidth
  - location
stateInputs:
  description: |
    Input properties used for looking up and filtering LinkAggregationGroup resources.
  properties:
    arn:
      type: string
      description: |
        The ARN of the LAG.
    connectionId:
      type: string
      description: |
        The ID of an existing dedicated connection to migrate to the LAG.
      willReplaceOnChanges: true
    connectionsBandwidth:
      type: string
      description: |
        The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
      willReplaceOnChanges: true
    forceDestroy:
      type: boolean
      description: |
        A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.
    hasLogicalRedundancy:
      type: string
      description: |
        Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).
    jumboFrameCapable:
      type: boolean
    location:
      type: string
      description: |
        The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
      willReplaceOnChanges: true
    name:
      type: string
      description: |
        The name of the LAG.
    ownerAccountId:
      type: string
      description: |
        The ID of the AWS account that owns the LAG.
    providerName:
      type: string
      description: |
        The name of the service provider associated with the LAG.
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type: object
