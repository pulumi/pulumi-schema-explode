$token: aws:dms/endpoint:Endpoint
properties:
  certificateArn:
    type: string
    description: |
      ARN for the certificate.
  databaseName:
    type: string
    description: |
      Name of the endpoint database.
  elasticsearchSettings:
    $ref: "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings"
    description: |
      Configuration block for OpenSearch settings. See below.
  endpointArn:
    type: string
    description: |
      ARN for the endpoint.
  endpointId:
    type: string
    description: |
      Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
  endpointType:
    type: string
    description: |
      Type of endpoint. Valid values are `source`, `target`.
  engineName:
    type: string
    description: |
      Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `db2`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).
  extraConnectionAttributes:
    type: string
    description: |
      Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
  kafkaSettings:
    $ref: "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings"
    description: |
      Configuration block for Kafka settings. See below.
  kinesisSettings:
    $ref: "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings"
    description: |
      Configuration block for Kinesis settings. See below.
  kmsKeyArn:
    type: string
    description: |
      ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
  mongodbSettings:
    $ref: "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings"
    description: |
      Configuration block for MongoDB settings. See below.
  password:
    type: string
    description: |
      Password to be used to login to the endpoint database.
  port:
    type: integer
    description: |
      Transmission Control Protocol (TCP) port for the endpoint.
  redisSettings:
    $ref: "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
  redshiftSettings:
    $ref: "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings"
    description: |
      Configuration block for Redshift settings. See below.
  s3Settings:
    $ref: "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings"
    description: |
      Configuration block for S3 settings. See below.
  secretsManagerAccessRoleArn:
    type: string
    description: |
      ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
  secretsManagerArn:
    type: string
    description: |
      Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift` or `sqlserver`.
  serverName:
    type: string
    description: |
      Fully qualified domain name of the endpoint.
  serviceAccessRole:
    type: string
    description: |
      ARN used by the service access IAM role for dynamodb endpoints.
  sslMode:
    type: string
    description: |
      SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  username:
    type: string
    description: |
      User name to be used to login to the endpoint database.
required:
  - certificateArn
  - endpointArn
  - endpointId
  - endpointType
  - engineName
  - extraConnectionAttributes
  - kmsKeyArn
  - redshiftSettings
  - sslMode
  - tagsAll
inputProperties:
  certificateArn:
    type: string
    description: |
      ARN for the certificate.
  databaseName:
    type: string
    description: |
      Name of the endpoint database.
  elasticsearchSettings:
    $ref: "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings"
    description: |
      Configuration block for OpenSearch settings. See below.
  endpointId:
    type: string
    description: |
      Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
    willReplaceOnChanges: true
  endpointType:
    type: string
    description: |
      Type of endpoint. Valid values are `source`, `target`.
  engineName:
    type: string
    description: |
      Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `db2`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).
  extraConnectionAttributes:
    type: string
    description: |
      Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
  kafkaSettings:
    $ref: "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings"
    description: |
      Configuration block for Kafka settings. See below.
  kinesisSettings:
    $ref: "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings"
    description: |
      Configuration block for Kinesis settings. See below.
  kmsKeyArn:
    type: string
    description: |
      ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    willReplaceOnChanges: true
  mongodbSettings:
    $ref: "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings"
    description: |
      Configuration block for MongoDB settings. See below.
  password:
    type: string
    description: |
      Password to be used to login to the endpoint database.
  port:
    type: integer
    description: |
      Transmission Control Protocol (TCP) port for the endpoint.
  redisSettings:
    $ref: "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
  redshiftSettings:
    $ref: "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings"
    description: |
      Configuration block for Redshift settings. See below.
  s3Settings:
    $ref: "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings"
    description: |
      Configuration block for S3 settings. See below.
  secretsManagerAccessRoleArn:
    type: string
    description: |
      ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
  secretsManagerArn:
    type: string
    description: |
      Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift` or `sqlserver`.
  serverName:
    type: string
    description: |
      Fully qualified domain name of the endpoint.
  serviceAccessRole:
    type: string
    description: |
      ARN used by the service access IAM role for dynamodb endpoints.
  sslMode:
    type: string
    description: |
      SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  username:
    type: string
    description: |
      User name to be used to login to the endpoint database.
requiredInputs:
  - endpointId
  - endpointType
  - engineName
stateInputs:
  description: |
    Input properties used for looking up and filtering Endpoint resources.
  properties:
    certificateArn:
      type: string
      description: |
        ARN for the certificate.
    databaseName:
      type: string
      description: |
        Name of the endpoint database.
    elasticsearchSettings:
      $ref: "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings"
      description: |
        Configuration block for OpenSearch settings. See below.
    endpointArn:
      type: string
      description: |
        ARN for the endpoint.
    endpointId:
      type: string
      description: |
        Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
      willReplaceOnChanges: true
    endpointType:
      type: string
      description: |
        Type of endpoint. Valid values are `source`, `target`.
    engineName:
      type: string
      description: |
        Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `db2`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).
    extraConnectionAttributes:
      type: string
      description: |
        Additional attributes associated with the connection. For available attributes see [Using Extra Connection Attributes with AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib).
    kafkaSettings:
      $ref: "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings"
      description: |
        Configuration block for Kafka settings. See below.
    kinesisSettings:
      $ref: "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings"
      description: |
        Configuration block for Kinesis settings. See below.
    kmsKeyArn:
      type: string
      description: |
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
      willReplaceOnChanges: true
    mongodbSettings:
      $ref: "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings"
      description: |
        Configuration block for MongoDB settings. See below.
    password:
      type: string
      description: |
        Password to be used to login to the endpoint database.
    port:
      type: integer
      description: |
        Transmission Control Protocol (TCP) port for the endpoint.
    redisSettings:
      $ref: "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
    redshiftSettings:
      $ref: "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings"
      description: |
        Configuration block for Redshift settings. See below.
    s3Settings:
      $ref: "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings"
      description: |
        Configuration block for S3 settings. See below.
    secretsManagerAccessRoleArn:
      type: string
      description: |
        ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.
    secretsManagerArn:
      type: string
      description: |
        Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only for `engine_name` as `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift` or `sqlserver`.
    serverName:
      type: string
      description: |
        Fully qualified domain name of the endpoint.
    serviceAccessRole:
      type: string
      description: |
        ARN used by the service access IAM role for dynamodb endpoints.
    sslMode:
      type: string
      description: |
        SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    username:
      type: string
      description: |
        User name to be used to login to the endpoint database.
  type: object
