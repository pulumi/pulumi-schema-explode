$token: aws:iot/authorizer:Authorizer
properties:
  arn:
    type: string
    description: |
      The ARN of the authorizer.
  authorizerFunctionArn:
    type: string
    description: |
      The ARN of the authorizer's Lambda function.
  enableCachingForHttp:
    type: boolean
    description: |
      Specifies whether the HTTP caching is enabled or not. Default: `false`.
  name:
    type: string
    description: |
      The name of the authorizer.
  signingDisabled:
    type: boolean
    description: |
      Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
  status:
    type: string
    description: |
      The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
  tokenKeyName:
    type: string
    description: |
      The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
  tokenSigningPublicKeys:
    type: object
    additionalProperties:
      type: string
    description: |
      The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
required:
  - arn
  - authorizerFunctionArn
  - name
inputProperties:
  authorizerFunctionArn:
    type: string
    description: |
      The ARN of the authorizer's Lambda function.
  enableCachingForHttp:
    type: boolean
    description: |
      Specifies whether the HTTP caching is enabled or not. Default: `false`.
  name:
    type: string
    description: |
      The name of the authorizer.
  signingDisabled:
    type: boolean
    description: |
      Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
  status:
    type: string
    description: |
      The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
  tokenKeyName:
    type: string
    description: |
      The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
  tokenSigningPublicKeys:
    type: object
    additionalProperties:
      type: string
    description: |
      The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
requiredInputs:
  - authorizerFunctionArn
stateInputs:
  description: |
    Input properties used for looking up and filtering Authorizer resources.
  properties:
    arn:
      type: string
      description: |
        The ARN of the authorizer.
    authorizerFunctionArn:
      type: string
      description: |
        The ARN of the authorizer's Lambda function.
    enableCachingForHttp:
      type: boolean
      description: |
        Specifies whether the HTTP caching is enabled or not. Default: `false`.
    name:
      type: string
      description: |
        The name of the authorizer.
    signingDisabled:
      type: boolean
      description: |
        Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
    status:
      type: string
      description: |
        The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
    tokenKeyName:
      type: string
      description: |
        The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
    tokenSigningPublicKeys:
      type: object
      additionalProperties:
        type: string
      description: |
        The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
  type: object
