$token: aws:autoscalingplans/ScalingPlanScalingInstruction:ScalingPlanScalingInstruction
properties:
  customizedLoadMetricSpecification:
    $ref: "#/types/aws:autoscalingplans/ScalingPlanScalingInstructionCustomizedLoadMetricSpecification:ScalingPlanScalingInstructionCustomizedLoadMetricSpecification"
    description: |
      Customized load metric to use for predictive scaling. You must specify either `customized_load_metric_specification` or `predefined_load_metric_specification` when configuring predictive scaling.
      More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).
    language:
      python:
        mapCase: false
  disableDynamicScaling:
    type: boolean
    description: |
      Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.
    language:
      python:
        mapCase: false
  maxCapacity:
    type: integer
    description: |
      Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictive_scaling_max_capacity_behavior`.
    language:
      python:
        mapCase: false
  minCapacity:
    type: integer
    description: |
      Minimum capacity of the resource.
    language:
      python:
        mapCase: false
  predefinedLoadMetricSpecification:
    $ref: "#/types/aws:autoscalingplans/ScalingPlanScalingInstructionPredefinedLoadMetricSpecification:ScalingPlanScalingInstructionPredefinedLoadMetricSpecification"
    description: |
      Predefined load metric to use for predictive scaling. You must specify either `predefined_load_metric_specification` or `customized_load_metric_specification` when configuring predictive scaling.
      More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).
    language:
      python:
        mapCase: false
  predictiveScalingMaxCapacityBehavior:
    type: string
    description: |
      Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
      Valid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.
    language:
      python:
        mapCase: false
  predictiveScalingMaxCapacityBuffer:
    type: integer
    description: |
      Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
    language:
      python:
        mapCase: false
  predictiveScalingMode:
    type: string
    description: |
      Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.
    language:
      python:
        mapCase: false
  resourceId:
    type: string
    description: |
      ID of the resource. This string consists of the resource type and unique identifier.
    language:
      python:
        mapCase: false
  scalableDimension:
    type: string
    description: |
      Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.
    language:
      python:
        mapCase: false
  scalingPolicyUpdateBehavior:
    type: string
    description: |
      Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.
    language:
      python:
        mapCase: false
  scheduledActionBufferTime:
    type: integer
    description: |
      Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
    language:
      python:
        mapCase: false
  serviceNamespace:
    type: string
    description: |
      Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.
    language:
      python:
        mapCase: false
  targetTrackingConfigurations:
    type: array
    items:
      $ref: "#/types/aws:autoscalingplans/ScalingPlanScalingInstructionTargetTrackingConfiguration:ScalingPlanScalingInstructionTargetTrackingConfiguration"
    description: |
      Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
      More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).
    language:
      python:
        mapCase: false
type: object
required:
  - maxCapacity
  - minCapacity
  - resourceId
  - scalableDimension
  - serviceNamespace
  - targetTrackingConfigurations
