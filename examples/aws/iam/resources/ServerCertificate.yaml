$token: aws:iam/serverCertificate:ServerCertificate
properties:
  arn:
    type: string
    description: |
      The Amazon Resource Name (ARN) specifying the server certificate.
  certificateBody:
    type: string
    description: |
      The contents of the public key certificate in
      PEM-encoded format.
  certificateChain:
    type: string
    description: |
      The contents of the certificate chain.
      This is typically a concatenation of the PEM-encoded public key certificates
      of the chain.
  expiration:
    type: string
    description: |
      Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) on which the certificate is set to expire.
  name:
    type: string
    description: |
      The name of the Server Certificate. Do not include the
      path in this value. If omitted, this provider will assign a random, unique name.
  namePrefix:
    type: string
    description: |
      Creates a unique name beginning with the specified
      prefix. Conflicts with `name`.
  path:
    type: string
    description: |
      The IAM path for the server certificate.  If it is not
      included, it defaults to a slash (/). If this certificate is for use with
      AWS CloudFront, the path must be in format `/cloudfront/your_path_here`.
      See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more details on IAM Paths.
  privateKey:
    type: string
    description: |
      The contents of the private key in PEM-encoded format.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of resource tags for the server certificate. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  uploadDate:
    type: string
    description: |
      Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) when the server certificate was uploaded.
required:
  - arn
  - certificateBody
  - expiration
  - name
  - privateKey
  - tagsAll
  - uploadDate
inputProperties:
  certificateBody:
    type: string
    description: |
      The contents of the public key certificate in
      PEM-encoded format.
    willReplaceOnChanges: true
  certificateChain:
    type: string
    description: |
      The contents of the certificate chain.
      This is typically a concatenation of the PEM-encoded public key certificates
      of the chain.
    willReplaceOnChanges: true
  name:
    type: string
    description: |
      The name of the Server Certificate. Do not include the
      path in this value. If omitted, this provider will assign a random, unique name.
    willReplaceOnChanges: true
  namePrefix:
    type: string
    description: |
      Creates a unique name beginning with the specified
      prefix. Conflicts with `name`.
    willReplaceOnChanges: true
  path:
    type: string
    description: |
      The IAM path for the server certificate.  If it is not
      included, it defaults to a slash (/). If this certificate is for use with
      AWS CloudFront, the path must be in format `/cloudfront/your_path_here`.
      See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more details on IAM Paths.
    willReplaceOnChanges: true
  privateKey:
    type: string
    description: |
      The contents of the private key in PEM-encoded format.
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of resource tags for the server certificate. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
requiredInputs:
  - certificateBody
  - privateKey
stateInputs:
  description: |
    Input properties used for looking up and filtering ServerCertificate resources.
  properties:
    arn:
      type: string
      description: |
        The Amazon Resource Name (ARN) specifying the server certificate.
    certificateBody:
      type: string
      description: |
        The contents of the public key certificate in
        PEM-encoded format.
      willReplaceOnChanges: true
    certificateChain:
      type: string
      description: |
        The contents of the certificate chain.
        This is typically a concatenation of the PEM-encoded public key certificates
        of the chain.
      willReplaceOnChanges: true
    expiration:
      type: string
      description: |
        Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) on which the certificate is set to expire.
    name:
      type: string
      description: |
        The name of the Server Certificate. Do not include the
        path in this value. If omitted, this provider will assign a random, unique name.
      willReplaceOnChanges: true
    namePrefix:
      type: string
      description: |
        Creates a unique name beginning with the specified
        prefix. Conflicts with `name`.
      willReplaceOnChanges: true
    path:
      type: string
      description: |
        The IAM path for the server certificate.  If it is not
        included, it defaults to a slash (/). If this certificate is for use with
        AWS CloudFront, the path must be in format `/cloudfront/your_path_here`.
        See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more details on IAM Paths.
      willReplaceOnChanges: true
    privateKey:
      type: string
      description: |
        The contents of the private key in PEM-encoded format.
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of resource tags for the server certificate. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    uploadDate:
      type: string
      description: |
        Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) when the server certificate was uploaded.
  type: object
