$token: aws:gamelift/gameSessionQueue:GameSessionQueue
properties:
  arn:
    type: string
    description: |
      Game Session Queue ARN.
  destinations:
    type: array
    items:
      type: string
    description: |
      List of fleet/alias ARNs used by session queue for placing game sessions.
  name:
    type: string
    description: |
      Name of the session queue.
  notificationTarget:
    type: string
    description: |
      An SNS topic ARN that is set up to receive game session placement notifications.
  playerLatencyPolicies:
    type: array
    items:
      $ref: "#/types/aws:gamelift/GameSessionQueuePlayerLatencyPolicy:GameSessionQueuePlayerLatencyPolicy"
    description: |
      One or more policies used to choose fleet based on player latency. See below.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  timeoutInSeconds:
    type: integer
    description: |
      Maximum time a game session request can remain in the queue.
required:
  - arn
  - name
  - tagsAll
inputProperties:
  destinations:
    type: array
    items:
      type: string
    description: |
      List of fleet/alias ARNs used by session queue for placing game sessions.
  name:
    type: string
    description: |
      Name of the session queue.
    willReplaceOnChanges: true
  notificationTarget:
    type: string
    description: |
      An SNS topic ARN that is set up to receive game session placement notifications.
  playerLatencyPolicies:
    type: array
    items:
      $ref: "#/types/aws:gamelift/GameSessionQueuePlayerLatencyPolicy:GameSessionQueuePlayerLatencyPolicy"
    description: |
      One or more policies used to choose fleet based on player latency. See below.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  timeoutInSeconds:
    type: integer
    description: |
      Maximum time a game session request can remain in the queue.
stateInputs:
  description: |
    Input properties used for looking up and filtering GameSessionQueue resources.
  properties:
    arn:
      type: string
      description: |
        Game Session Queue ARN.
    destinations:
      type: array
      items:
        type: string
      description: |
        List of fleet/alias ARNs used by session queue for placing game sessions.
    name:
      type: string
      description: |
        Name of the session queue.
      willReplaceOnChanges: true
    notificationTarget:
      type: string
      description: |
        An SNS topic ARN that is set up to receive game session placement notifications.
    playerLatencyPolicies:
      type: array
      items:
        $ref: "#/types/aws:gamelift/GameSessionQueuePlayerLatencyPolicy:GameSessionQueuePlayerLatencyPolicy"
      description: |
        One or more policies used to choose fleet based on player latency. See below.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    timeoutInSeconds:
      type: integer
      description: |
        Maximum time a game session request can remain in the queue.
  type: object
