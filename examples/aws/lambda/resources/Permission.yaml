$token: aws:lambda/permission:Permission
properties:
  action:
    type: string
    description: |
      The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)
  eventSourceToken:
    type: string
    description: |
      The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).
  function:
    type: string
    description: |
      Name of the Lambda function whose resource policy you are updating
  functionUrlAuthType:
    type: string
    description: |
      Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`.
  principal:
    type: string
    description: |
      The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or any valid AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.
  principalOrgId:
    type: string
    description: |
      The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.
  qualifier:
    type: string
    description: |
      Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`
  sourceAccount:
    type: string
    description: |
      This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
  sourceArn:
    type: string
    description: |
      When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
      Without this, any resource from `principal` will be granted permission – even if that resource is from another account.
      For S3, this should be the ARN of the S3 Bucket.
      For EventBridge events, this should be the ARN of the EventBridge Rule.
      For API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).
  statementId:
    type: string
    description: |
      A unique statement identifier. By default generated by this provider.
  statementIdPrefix:
    type: string
    description: |
      A statement identifier prefix. This provider will generate a unique suffix. Conflicts with `statement_id`.
required:
  - action
  - function
  - principal
  - statementId
  - statementIdPrefix
inputProperties:
  action:
    type: string
    description: |
      The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)
    willReplaceOnChanges: true
  eventSourceToken:
    type: string
    description: |
      The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).
    willReplaceOnChanges: true
  function:
    type: string
    oneOf:
      - type: string
      - type: string
        $ref: "#/types/aws:lambda/function:Function"
    description: |
      Name of the Lambda function whose resource policy you are updating
    willReplaceOnChanges: true
  functionUrlAuthType:
    type: string
    description: |
      Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`.
    willReplaceOnChanges: true
  principal:
    type: string
    description: |
      The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or any valid AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.
    willReplaceOnChanges: true
  principalOrgId:
    type: string
    description: |
      The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.
    willReplaceOnChanges: true
  qualifier:
    type: string
    description: |
      Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`
    willReplaceOnChanges: true
  sourceAccount:
    type: string
    description: |
      This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
    willReplaceOnChanges: true
  sourceArn:
    type: string
    description: |
      When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
      Without this, any resource from `principal` will be granted permission – even if that resource is from another account.
      For S3, this should be the ARN of the S3 Bucket.
      For EventBridge events, this should be the ARN of the EventBridge Rule.
      For API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).
    willReplaceOnChanges: true
  statementId:
    type: string
    description: |
      A unique statement identifier. By default generated by this provider.
    willReplaceOnChanges: true
  statementIdPrefix:
    type: string
    description: |
      A statement identifier prefix. This provider will generate a unique suffix. Conflicts with `statement_id`.
    willReplaceOnChanges: true
requiredInputs:
  - action
  - function
  - principal
stateInputs:
  description: |
    Input properties used for looking up and filtering Permission resources.
  properties:
    action:
      type: string
      description: |
        The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)
      willReplaceOnChanges: true
    eventSourceToken:
      type: string
      description: |
        The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).
      willReplaceOnChanges: true
    function:
      type: string
      oneOf:
        - type: string
        - type: string
          $ref: "#/types/aws:lambda/function:Function"
      description: |
        Name of the Lambda function whose resource policy you are updating
      willReplaceOnChanges: true
    functionUrlAuthType:
      type: string
      description: |
        Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`.
      willReplaceOnChanges: true
    principal:
      type: string
      description: |
        The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or any valid AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.
      willReplaceOnChanges: true
    principalOrgId:
      type: string
      description: |
        The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.
      willReplaceOnChanges: true
    qualifier:
      type: string
      description: |
        Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`
      willReplaceOnChanges: true
    sourceAccount:
      type: string
      description: |
        This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
      willReplaceOnChanges: true
    sourceArn:
      type: string
      description: |
        When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
        Without this, any resource from `principal` will be granted permission – even if that resource is from another account.
        For S3, this should be the ARN of the S3 Bucket.
        For EventBridge events, this should be the ARN of the EventBridge Rule.
        For API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).
      willReplaceOnChanges: true
    statementId:
      type: string
      description: |
        A unique statement identifier. By default generated by this provider.
      willReplaceOnChanges: true
    statementIdPrefix:
      type: string
      description: |
        A statement identifier prefix. This provider will generate a unique suffix. Conflicts with `statement_id`.
      willReplaceOnChanges: true
  type: object
