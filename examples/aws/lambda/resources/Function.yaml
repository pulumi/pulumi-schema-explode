$token: aws:lambda/function:Function
properties:
  architectures:
    type: array
    items:
      type: string
    description: |
      Instruction set architecture for your Lambda function. Valid values are `["x86_64"]` and `["arm64"]`. Default is `["x86_64"]`. Removing this attribute, function's architecture stay the same.
  arn:
    type: string
    description: |
      Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
  code:
    $ref: pulumi.json#/Archive
    description: |
      Path to the function's deployment package within the local filesystem. Conflicts with `image_uri`, `s3_bucket`, `s3_key`, and `s3_object_version`.
  codeSigningConfigArn:
    type: string
    description: |
      To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
  deadLetterConfig:
    $ref: "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig"
    description: |
      Configuration block. Detailed below.
  description:
    type: string
    description: |
      Description of what your Lambda Function does.
  environment:
    $ref: "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment"
    description: |
      Configuration block. Detailed below.
  ephemeralStorage:
    $ref: "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage"
    description: |
      The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
  fileSystemConfig:
    $ref: "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig"
    description: |
      Configuration block. Detailed below.
  handler:
    type: string
    description: |
      Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
  imageConfig:
    $ref: "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig"
    description: |
      Configuration block. Detailed below.
  imageUri:
    type: string
    description: |
      ECR image URI containing the function's deployment package. Conflicts with `filename`, `s3_bucket`, `s3_key`, and `s3_object_version`.
  invokeArn:
    type: string
    description: |
      ARN to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`'s `uri`.
  kmsKeyArn:
    type: string
    description: |
      Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
  lastModified:
    type: string
    description: |
      Date this resource was last modified.
  layers:
    type: array
    items:
      type: string
    description: |
      List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
  memorySize:
    type: integer
    description: |
      Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
  name:
    type: string
    description: |
      Unique name for your Lambda Function.
  packageType:
    type: string
    description: |
      Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
  publish:
    type: boolean
    description: |
      Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
  qualifiedArn:
    type: string
    description: |
      ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
  reservedConcurrentExecutions:
    type: integer
    description: |
      Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
  role:
    type: string
    $ref: "#/types/aws:index/aRN:ARN"
    description: |
      Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
  runtime:
    type: string
    description: |
      Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
  s3Bucket:
    type: string
    description: |
      S3 bucket location containing the function's deployment package. Conflicts with `filename` and `image_uri`. This bucket must reside in the same AWS region where you are creating the Lambda function.
  s3Key:
    type: string
    description: |
      S3 key of an object containing the function's deployment package. Conflicts with `filename` and `image_uri`.
  s3ObjectVersion:
    type: string
    description: |
      Object version containing the function's deployment package. Conflicts with `filename` and `image_uri`.
  signingJobArn:
    type: string
    description: |
      ARN of the signing job.
  signingProfileVersionArn:
    type: string
    description: |
      ARN of the signing profile version.
  sourceCodeHash:
    type: string
    description: |
      Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `filebase64sha256("file.zip")`, where "file.zip" is the local filename of the lambda function source archive.
  sourceCodeSize:
    type: integer
    description: |
      Size in bytes of the function .zip file.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  timeout:
    type: integer
    description: |
      Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
  tracingConfig:
    $ref: "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig"
    description: |
      Configuration block. Detailed below.
  version:
    type: string
    description: |
      Latest published version of your Lambda Function.
      * `vpc_config.vpc_id` - ID of the VPC.
  vpcConfig:
    $ref: "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig"
    description: |
      Configuration block. Detailed below.
required:
  - architectures
  - arn
  - ephemeralStorage
  - name
  - invokeArn
  - lastModified
  - qualifiedArn
  - role
  - signingJobArn
  - signingProfileVersionArn
  - sourceCodeHash
  - sourceCodeSize
  - tagsAll
  - tracingConfig
  - version
inputProperties:
  architectures:
    type: array
    items:
      type: string
    description: |
      Instruction set architecture for your Lambda function. Valid values are `["x86_64"]` and `["arm64"]`. Default is `["x86_64"]`. Removing this attribute, function's architecture stay the same.
  code:
    $ref: pulumi.json#/Archive
    description: |
      Path to the function's deployment package within the local filesystem. Conflicts with `image_uri`, `s3_bucket`, `s3_key`, and `s3_object_version`.
  codeSigningConfigArn:
    type: string
    description: |
      To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
  deadLetterConfig:
    $ref: "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig"
    description: |
      Configuration block. Detailed below.
  description:
    type: string
    description: |
      Description of what your Lambda Function does.
  environment:
    $ref: "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment"
    description: |
      Configuration block. Detailed below.
  ephemeralStorage:
    $ref: "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage"
    description: |
      The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
  fileSystemConfig:
    $ref: "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig"
    description: |
      Configuration block. Detailed below.
  handler:
    type: string
    description: |
      Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
  imageConfig:
    $ref: "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig"
    description: |
      Configuration block. Detailed below.
  imageUri:
    type: string
    description: |
      ECR image URI containing the function's deployment package. Conflicts with `filename`, `s3_bucket`, `s3_key`, and `s3_object_version`.
  kmsKeyArn:
    type: string
    description: |
      Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
  layers:
    type: array
    items:
      type: string
    description: |
      List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
  memorySize:
    type: integer
    description: |
      Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
  name:
    type: string
    description: |
      Unique name for your Lambda Function.
    willReplaceOnChanges: true
  packageType:
    type: string
    description: |
      Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
    willReplaceOnChanges: true
  publish:
    type: boolean
    description: |
      Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
  reservedConcurrentExecutions:
    type: integer
    description: |
      Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
  role:
    type: string
    $ref: "#/types/aws:index/aRN:ARN"
    description: |
      Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
  runtime:
    type: string
    oneOf:
      - type: string
      - type: string
        $ref: "#/types/aws:lambda/Runtime:Runtime"
    description: |
      Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
  s3Bucket:
    type: string
    description: |
      S3 bucket location containing the function's deployment package. Conflicts with `filename` and `image_uri`. This bucket must reside in the same AWS region where you are creating the Lambda function.
  s3Key:
    type: string
    description: |
      S3 key of an object containing the function's deployment package. Conflicts with `filename` and `image_uri`.
  s3ObjectVersion:
    type: string
    description: |
      Object version containing the function's deployment package. Conflicts with `filename` and `image_uri`.
  sourceCodeHash:
    type: string
    description: |
      Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `filebase64sha256("file.zip")`, where "file.zip" is the local filename of the lambda function source archive.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  timeout:
    type: integer
    description: |
      Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
  tracingConfig:
    $ref: "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig"
    description: |
      Configuration block. Detailed below.
  vpcConfig:
    $ref: "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig"
    description: |
      Configuration block. Detailed below.
requiredInputs:
  - role
stateInputs:
  description: |
    Input properties used for looking up and filtering Function resources.
  properties:
    architectures:
      type: array
      items:
        type: string
      description: |
        Instruction set architecture for your Lambda function. Valid values are `["x86_64"]` and `["arm64"]`. Default is `["x86_64"]`. Removing this attribute, function's architecture stay the same.
    arn:
      type: string
      description: |
        Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
    code:
      $ref: pulumi.json#/Archive
      description: |
        Path to the function's deployment package within the local filesystem. Conflicts with `image_uri`, `s3_bucket`, `s3_key`, and `s3_object_version`.
    codeSigningConfigArn:
      type: string
      description: |
        To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
    deadLetterConfig:
      $ref: "#/types/aws:lambda/FunctionDeadLetterConfig:FunctionDeadLetterConfig"
      description: |
        Configuration block. Detailed below.
    description:
      type: string
      description: |
        Description of what your Lambda Function does.
    environment:
      $ref: "#/types/aws:lambda/FunctionEnvironment:FunctionEnvironment"
      description: |
        Configuration block. Detailed below.
    ephemeralStorage:
      $ref: "#/types/aws:lambda/FunctionEphemeralStorage:FunctionEphemeralStorage"
      description: |
        The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
    fileSystemConfig:
      $ref: "#/types/aws:lambda/FunctionFileSystemConfig:FunctionFileSystemConfig"
      description: |
        Configuration block. Detailed below.
    handler:
      type: string
      description: |
        Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
    imageConfig:
      $ref: "#/types/aws:lambda/FunctionImageConfig:FunctionImageConfig"
      description: |
        Configuration block. Detailed below.
    imageUri:
      type: string
      description: |
        ECR image URI containing the function's deployment package. Conflicts with `filename`, `s3_bucket`, `s3_key`, and `s3_object_version`.
    invokeArn:
      type: string
      description: |
        ARN to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`'s `uri`.
    kmsKeyArn:
      type: string
      description: |
        Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
    lastModified:
      type: string
      description: |
        Date this resource was last modified.
    layers:
      type: array
      items:
        type: string
      description: |
        List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
    memorySize:
      type: integer
      description: |
        Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
    name:
      type: string
      description: |
        Unique name for your Lambda Function.
      willReplaceOnChanges: true
    packageType:
      type: string
      description: |
        Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
      willReplaceOnChanges: true
    publish:
      type: boolean
      description: |
        Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
    qualifiedArn:
      type: string
      description: |
        ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
    reservedConcurrentExecutions:
      type: integer
      description: |
        Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
    role:
      type: string
      $ref: "#/types/aws:index/aRN:ARN"
      description: |
        Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
    runtime:
      type: string
      oneOf:
        - type: string
        - type: string
          $ref: "#/types/aws:lambda/Runtime:Runtime"
      description: |
        Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
    s3Bucket:
      type: string
      description: |
        S3 bucket location containing the function's deployment package. Conflicts with `filename` and `image_uri`. This bucket must reside in the same AWS region where you are creating the Lambda function.
    s3Key:
      type: string
      description: |
        S3 key of an object containing the function's deployment package. Conflicts with `filename` and `image_uri`.
    s3ObjectVersion:
      type: string
      description: |
        Object version containing the function's deployment package. Conflicts with `filename` and `image_uri`.
    signingJobArn:
      type: string
      description: |
        ARN of the signing job.
    signingProfileVersionArn:
      type: string
      description: |
        ARN of the signing profile version.
    sourceCodeHash:
      type: string
      description: |
        Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `filebase64sha256("file.zip")`, where "file.zip" is the local filename of the lambda function source archive.
    sourceCodeSize:
      type: integer
      description: |
        Size in bytes of the function .zip file.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    timeout:
      type: integer
      description: |
        Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
    tracingConfig:
      $ref: "#/types/aws:lambda/FunctionTracingConfig:FunctionTracingConfig"
      description: |
        Configuration block. Detailed below.
    version:
      type: string
      description: |
        Latest published version of your Lambda Function.
        * `vpc_config.vpc_id` - ID of the VPC.
    vpcConfig:
      $ref: "#/types/aws:lambda/FunctionVpcConfig:FunctionVpcConfig"
      description: |
        Configuration block. Detailed below.
  type: object
