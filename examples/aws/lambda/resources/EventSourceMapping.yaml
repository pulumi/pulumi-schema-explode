$token: aws:lambda/eventSourceMapping:EventSourceMapping
properties:
  amazonManagedKafkaEventSourceConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingAmazonManagedKafkaEventSourceConfig:EventSourceMappingAmazonManagedKafkaEventSourceConfig"
    description: |
      Additional configuration block for Amazon Managed Kafka sources. Incompatible with "self_managed_event_source" and "self_managed_kafka_event_source_config". Detailed below.
  batchSize:
    type: integer
    description: |
      The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to `100` for DynamoDB, Kinesis, MQ and MSK, `10` for SQS.
      * `bisect_batch_on_function_error`: - (Optional) If the function returns an error, split the batch in two and retry. Only available for stream sources (DynamoDB and Kinesis). Defaults to `false`.
      * `destination_config`: - (Optional) An Amazon SQS queue or Amazon SNS topic destination for failed records. Only available for stream sources (DynamoDB and Kinesis). Detailed below.
  bisectBatchOnFunctionError:
    type: boolean
  destinationConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingDestinationConfig:EventSourceMappingDestinationConfig"
  enabled:
    type: boolean
    description: |
      Determines if the mapping will be enabled on creation. Defaults to `true`.
  eventSourceArn:
    type: string
    description: |
      The event source ARN - this is required for Kinesis stream, DynamoDB stream, SQS queue, MQ broker or MSK cluster.  It is incompatible with a Self Managed Kafka source.
  filterCriteria:
    $ref: "#/types/aws:lambda/EventSourceMappingFilterCriteria:EventSourceMappingFilterCriteria"
    description: |
      The criteria to use for [event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) Kinesis stream, DynamoDB stream, SQS queue event sources. Detailed below.
  functionArn:
    type: string
    description: |
      The the ARN of the Lambda function the event source mapping is sending events to. (Note: this is a computed value that differs from `function_name` above.)
  functionName:
    type: string
    description: |
      The name or the ARN of the Lambda function that will be subscribing to events.
  functionResponseTypes:
    type: array
    items:
      type: string
    description: |
      A list of current response type enums applied to the event source mapping for [AWS Lambda checkpointing](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting). Only available for SQS and stream sources (DynamoDB and Kinesis). Valid values: `ReportBatchItemFailures`.
  lastModified:
    type: string
    description: |
      The date this resource was last modified.
  lastProcessingResult:
    type: string
    description: |
      The result of the last AWS Lambda invocation of your Lambda function.
  maximumBatchingWindowInSeconds:
    type: integer
    description: |
      The maximum amount of time to gather records before invoking the function, in seconds (between 0 and 300). Records will continue to buffer (or accumulate in the case of an SQS queue event source) until either `maximum_batching_window_in_seconds` expires or `batch_size` has been met. For streaming event sources, defaults to as soon as records are available in the stream. If the batch it reads from the stream/queue only has one record in it, Lambda only sends one record to the function. Only available for stream sources (DynamoDB and Kinesis) and SQS standard queues.
      * `maximum_record_age_in_seconds`: - (Optional) The maximum age of a record that Lambda sends to a function for processing. Only available for stream sources (DynamoDB and Kinesis). Must be either -1 (forever, and the default value) or between 60 and 604800 (inclusive).
      * `maximum_retry_attempts`: - (Optional) The maximum number of times to retry when the function returns an error. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of -1 (forever), maximum of 10000.
      * `parallelization_factor`: - (Optional) The number of batches to process from each shard concurrently. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of 1, maximum of 10.
  maximumRecordAgeInSeconds:
    type: integer
  maximumRetryAttempts:
    type: integer
  parallelizationFactor:
    type: integer
  queues:
    type: array
    items:
      type: string
    description: |
      The name of the Amazon MQ broker destination queue to consume. Only available for MQ sources. A single queue name must be specified.
      * `self_managed_event_source`: - (Optional) For Self Managed Kafka sources, the location of the self managed cluster. If set, configuration must also include `source_access_configuration`. Detailed below.
  selfManagedEventSource:
    $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedEventSource:EventSourceMappingSelfManagedEventSource"
  selfManagedKafkaEventSourceConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedKafkaEventSourceConfig:EventSourceMappingSelfManagedKafkaEventSourceConfig"
    description: |
      Additional configuration block for Self Managed Kafka sources. Incompatible with "event_source_arn" and "amazon_managed_kafka_event_source_config". Detailed below.
      * `source_access_configuration`: (Optional) For Self Managed Kafka sources, the access configuration for the source. If set, configuration must also include `self_managed_event_source`. Detailed below.
  sourceAccessConfigurations:
    type: array
    items:
      $ref: "#/types/aws:lambda/EventSourceMappingSourceAccessConfiguration:EventSourceMappingSourceAccessConfiguration"
  startingPosition:
    type: string
    description: |
      The position in the stream where AWS Lambda should start reading. Must be one of `AT_TIMESTAMP` (Kinesis only), `LATEST` or `TRIM_HORIZON` if getting events from Kinesis, DynamoDB or MSK. Must not be provided if getting events from SQS. More information about these positions can be found in the [AWS DynamoDB Streams API Reference](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_streams_GetShardIterator.html) and [AWS Kinesis API Reference](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType).
  startingPositionTimestamp:
    type: string
    description: |
      A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of the data record which to start reading when using `starting_position` set to `AT_TIMESTAMP`. If a record with this exact timestamp does not exist, the next later record is chosen. If the timestamp is older than the current trim horizon, the oldest available record is chosen.
  state:
    type: string
    description: |
      The state of the event source mapping.
  stateTransitionReason:
    type: string
    description: |
      The reason the event source mapping is in its current state.
  topics:
    type: array
    items:
      type: string
    description: |
      The name of the Kafka topics. Only available for MSK sources. A single topic name must be specified.
  tumblingWindowInSeconds:
    type: integer
    description: |
      The duration in seconds of a processing window for [AWS Lambda streaming analytics](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-windows). The range is between 1 second up to 900 seconds. Only available for stream sources (DynamoDB and Kinesis).
  uuid:
    type: string
    description: |
      The UUID of the created event source mapping.
required:
  - amazonManagedKafkaEventSourceConfig
  - functionArn
  - functionName
  - lastModified
  - lastProcessingResult
  - maximumRecordAgeInSeconds
  - maximumRetryAttempts
  - parallelizationFactor
  - selfManagedKafkaEventSourceConfig
  - state
  - stateTransitionReason
  - uuid
inputProperties:
  amazonManagedKafkaEventSourceConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingAmazonManagedKafkaEventSourceConfig:EventSourceMappingAmazonManagedKafkaEventSourceConfig"
    description: |
      Additional configuration block for Amazon Managed Kafka sources. Incompatible with "self_managed_event_source" and "self_managed_kafka_event_source_config". Detailed below.
    willReplaceOnChanges: true
  batchSize:
    type: integer
    description: |
      The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to `100` for DynamoDB, Kinesis, MQ and MSK, `10` for SQS.
      * `bisect_batch_on_function_error`: - (Optional) If the function returns an error, split the batch in two and retry. Only available for stream sources (DynamoDB and Kinesis). Defaults to `false`.
      * `destination_config`: - (Optional) An Amazon SQS queue or Amazon SNS topic destination for failed records. Only available for stream sources (DynamoDB and Kinesis). Detailed below.
  bisectBatchOnFunctionError:
    type: boolean
  destinationConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingDestinationConfig:EventSourceMappingDestinationConfig"
  enabled:
    type: boolean
    description: |
      Determines if the mapping will be enabled on creation. Defaults to `true`.
  eventSourceArn:
    type: string
    description: |
      The event source ARN - this is required for Kinesis stream, DynamoDB stream, SQS queue, MQ broker or MSK cluster.  It is incompatible with a Self Managed Kafka source.
    willReplaceOnChanges: true
  filterCriteria:
    $ref: "#/types/aws:lambda/EventSourceMappingFilterCriteria:EventSourceMappingFilterCriteria"
    description: |
      The criteria to use for [event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) Kinesis stream, DynamoDB stream, SQS queue event sources. Detailed below.
  functionName:
    type: string
    description: |
      The name or the ARN of the Lambda function that will be subscribing to events.
  functionResponseTypes:
    type: array
    items:
      type: string
    description: |
      A list of current response type enums applied to the event source mapping for [AWS Lambda checkpointing](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting). Only available for SQS and stream sources (DynamoDB and Kinesis). Valid values: `ReportBatchItemFailures`.
  maximumBatchingWindowInSeconds:
    type: integer
    description: |
      The maximum amount of time to gather records before invoking the function, in seconds (between 0 and 300). Records will continue to buffer (or accumulate in the case of an SQS queue event source) until either `maximum_batching_window_in_seconds` expires or `batch_size` has been met. For streaming event sources, defaults to as soon as records are available in the stream. If the batch it reads from the stream/queue only has one record in it, Lambda only sends one record to the function. Only available for stream sources (DynamoDB and Kinesis) and SQS standard queues.
      * `maximum_record_age_in_seconds`: - (Optional) The maximum age of a record that Lambda sends to a function for processing. Only available for stream sources (DynamoDB and Kinesis). Must be either -1 (forever, and the default value) or between 60 and 604800 (inclusive).
      * `maximum_retry_attempts`: - (Optional) The maximum number of times to retry when the function returns an error. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of -1 (forever), maximum of 10000.
      * `parallelization_factor`: - (Optional) The number of batches to process from each shard concurrently. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of 1, maximum of 10.
  maximumRecordAgeInSeconds:
    type: integer
  maximumRetryAttempts:
    type: integer
  parallelizationFactor:
    type: integer
  queues:
    type: array
    items:
      type: string
    description: |
      The name of the Amazon MQ broker destination queue to consume. Only available for MQ sources. A single queue name must be specified.
      * `self_managed_event_source`: - (Optional) For Self Managed Kafka sources, the location of the self managed cluster. If set, configuration must also include `source_access_configuration`. Detailed below.
    willReplaceOnChanges: true
  selfManagedEventSource:
    $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedEventSource:EventSourceMappingSelfManagedEventSource"
    willReplaceOnChanges: true
  selfManagedKafkaEventSourceConfig:
    $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedKafkaEventSourceConfig:EventSourceMappingSelfManagedKafkaEventSourceConfig"
    description: |
      Additional configuration block for Self Managed Kafka sources. Incompatible with "event_source_arn" and "amazon_managed_kafka_event_source_config". Detailed below.
      * `source_access_configuration`: (Optional) For Self Managed Kafka sources, the access configuration for the source. If set, configuration must also include `self_managed_event_source`. Detailed below.
    willReplaceOnChanges: true
  sourceAccessConfigurations:
    type: array
    items:
      $ref: "#/types/aws:lambda/EventSourceMappingSourceAccessConfiguration:EventSourceMappingSourceAccessConfiguration"
  startingPosition:
    type: string
    description: |
      The position in the stream where AWS Lambda should start reading. Must be one of `AT_TIMESTAMP` (Kinesis only), `LATEST` or `TRIM_HORIZON` if getting events from Kinesis, DynamoDB or MSK. Must not be provided if getting events from SQS. More information about these positions can be found in the [AWS DynamoDB Streams API Reference](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_streams_GetShardIterator.html) and [AWS Kinesis API Reference](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType).
    willReplaceOnChanges: true
  startingPositionTimestamp:
    type: string
    description: |
      A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of the data record which to start reading when using `starting_position` set to `AT_TIMESTAMP`. If a record with this exact timestamp does not exist, the next later record is chosen. If the timestamp is older than the current trim horizon, the oldest available record is chosen.
    willReplaceOnChanges: true
  topics:
    type: array
    items:
      type: string
    description: |
      The name of the Kafka topics. Only available for MSK sources. A single topic name must be specified.
    willReplaceOnChanges: true
  tumblingWindowInSeconds:
    type: integer
    description: |
      The duration in seconds of a processing window for [AWS Lambda streaming analytics](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-windows). The range is between 1 second up to 900 seconds. Only available for stream sources (DynamoDB and Kinesis).
requiredInputs:
  - functionName
stateInputs:
  description: |
    Input properties used for looking up and filtering EventSourceMapping resources.
  properties:
    amazonManagedKafkaEventSourceConfig:
      $ref: "#/types/aws:lambda/EventSourceMappingAmazonManagedKafkaEventSourceConfig:EventSourceMappingAmazonManagedKafkaEventSourceConfig"
      description: |
        Additional configuration block for Amazon Managed Kafka sources. Incompatible with "self_managed_event_source" and "self_managed_kafka_event_source_config". Detailed below.
      willReplaceOnChanges: true
    batchSize:
      type: integer
      description: |
        The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to `100` for DynamoDB, Kinesis, MQ and MSK, `10` for SQS.
        * `bisect_batch_on_function_error`: - (Optional) If the function returns an error, split the batch in two and retry. Only available for stream sources (DynamoDB and Kinesis). Defaults to `false`.
        * `destination_config`: - (Optional) An Amazon SQS queue or Amazon SNS topic destination for failed records. Only available for stream sources (DynamoDB and Kinesis). Detailed below.
    bisectBatchOnFunctionError:
      type: boolean
    destinationConfig:
      $ref: "#/types/aws:lambda/EventSourceMappingDestinationConfig:EventSourceMappingDestinationConfig"
    enabled:
      type: boolean
      description: |
        Determines if the mapping will be enabled on creation. Defaults to `true`.
    eventSourceArn:
      type: string
      description: |
        The event source ARN - this is required for Kinesis stream, DynamoDB stream, SQS queue, MQ broker or MSK cluster.  It is incompatible with a Self Managed Kafka source.
      willReplaceOnChanges: true
    filterCriteria:
      $ref: "#/types/aws:lambda/EventSourceMappingFilterCriteria:EventSourceMappingFilterCriteria"
      description: |
        The criteria to use for [event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html) Kinesis stream, DynamoDB stream, SQS queue event sources. Detailed below.
    functionArn:
      type: string
      description: |
        The the ARN of the Lambda function the event source mapping is sending events to. (Note: this is a computed value that differs from `function_name` above.)
    functionName:
      type: string
      description: |
        The name or the ARN of the Lambda function that will be subscribing to events.
    functionResponseTypes:
      type: array
      items:
        type: string
      description: |
        A list of current response type enums applied to the event source mapping for [AWS Lambda checkpointing](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-batchfailurereporting). Only available for SQS and stream sources (DynamoDB and Kinesis). Valid values: `ReportBatchItemFailures`.
    lastModified:
      type: string
      description: |
        The date this resource was last modified.
    lastProcessingResult:
      type: string
      description: |
        The result of the last AWS Lambda invocation of your Lambda function.
    maximumBatchingWindowInSeconds:
      type: integer
      description: |
        The maximum amount of time to gather records before invoking the function, in seconds (between 0 and 300). Records will continue to buffer (or accumulate in the case of an SQS queue event source) until either `maximum_batching_window_in_seconds` expires or `batch_size` has been met. For streaming event sources, defaults to as soon as records are available in the stream. If the batch it reads from the stream/queue only has one record in it, Lambda only sends one record to the function. Only available for stream sources (DynamoDB and Kinesis) and SQS standard queues.
        * `maximum_record_age_in_seconds`: - (Optional) The maximum age of a record that Lambda sends to a function for processing. Only available for stream sources (DynamoDB and Kinesis). Must be either -1 (forever, and the default value) or between 60 and 604800 (inclusive).
        * `maximum_retry_attempts`: - (Optional) The maximum number of times to retry when the function returns an error. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of -1 (forever), maximum of 10000.
        * `parallelization_factor`: - (Optional) The number of batches to process from each shard concurrently. Only available for stream sources (DynamoDB and Kinesis). Minimum and default of 1, maximum of 10.
    maximumRecordAgeInSeconds:
      type: integer
    maximumRetryAttempts:
      type: integer
    parallelizationFactor:
      type: integer
    queues:
      type: array
      items:
        type: string
      description: |
        The name of the Amazon MQ broker destination queue to consume. Only available for MQ sources. A single queue name must be specified.
        * `self_managed_event_source`: - (Optional) For Self Managed Kafka sources, the location of the self managed cluster. If set, configuration must also include `source_access_configuration`. Detailed below.
      willReplaceOnChanges: true
    selfManagedEventSource:
      $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedEventSource:EventSourceMappingSelfManagedEventSource"
      willReplaceOnChanges: true
    selfManagedKafkaEventSourceConfig:
      $ref: "#/types/aws:lambda/EventSourceMappingSelfManagedKafkaEventSourceConfig:EventSourceMappingSelfManagedKafkaEventSourceConfig"
      description: |
        Additional configuration block for Self Managed Kafka sources. Incompatible with "event_source_arn" and "amazon_managed_kafka_event_source_config". Detailed below.
        * `source_access_configuration`: (Optional) For Self Managed Kafka sources, the access configuration for the source. If set, configuration must also include `self_managed_event_source`. Detailed below.
      willReplaceOnChanges: true
    sourceAccessConfigurations:
      type: array
      items:
        $ref: "#/types/aws:lambda/EventSourceMappingSourceAccessConfiguration:EventSourceMappingSourceAccessConfiguration"
    startingPosition:
      type: string
      description: |
        The position in the stream where AWS Lambda should start reading. Must be one of `AT_TIMESTAMP` (Kinesis only), `LATEST` or `TRIM_HORIZON` if getting events from Kinesis, DynamoDB or MSK. Must not be provided if getting events from SQS. More information about these positions can be found in the [AWS DynamoDB Streams API Reference](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_streams_GetShardIterator.html) and [AWS Kinesis API Reference](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType).
      willReplaceOnChanges: true
    startingPositionTimestamp:
      type: string
      description: |
        A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of the data record which to start reading when using `starting_position` set to `AT_TIMESTAMP`. If a record with this exact timestamp does not exist, the next later record is chosen. If the timestamp is older than the current trim horizon, the oldest available record is chosen.
      willReplaceOnChanges: true
    state:
      type: string
      description: |
        The state of the event source mapping.
    stateTransitionReason:
      type: string
      description: |
        The reason the event source mapping is in its current state.
    topics:
      type: array
      items:
        type: string
      description: |
        The name of the Kafka topics. Only available for MSK sources. A single topic name must be specified.
      willReplaceOnChanges: true
    tumblingWindowInSeconds:
      type: integer
      description: |
        The duration in seconds of a processing window for [AWS Lambda streaming analytics](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-windows). The range is between 1 second up to 900 seconds. Only available for stream sources (DynamoDB and Kinesis).
    uuid:
      type: string
      description: |
        The UUID of the created event source mapping.
  type: object
