$token: aws:appmesh/virtualNode:VirtualNode
properties:
  arn:
    type: string
    description: |
      ARN of the virtual node.
  createdDate:
    type: string
    description: |
      Creation date of the virtual node.
  lastUpdatedDate:
    type: string
    description: |
      Last update date of the virtual node.
  meshName:
    type: string
    description: |
      Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
  meshOwner:
    type: string
    description: |
      AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
  name:
    type: string
    description: |
      Name to use for the virtual node. Must be between 1 and 255 characters in length.
  resourceOwner:
    type: string
    description: |
      Resource owner's AWS account ID.
  spec:
    $ref: "#/types/aws:appmesh/VirtualNodeSpec:VirtualNodeSpec"
    description: |
      Virtual node specification to apply.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
required:
  - arn
  - createdDate
  - lastUpdatedDate
  - meshName
  - meshOwner
  - name
  - resourceOwner
  - spec
  - tagsAll
inputProperties:
  meshName:
    type: string
    description: |
      Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    willReplaceOnChanges: true
  meshOwner:
    type: string
    description: |
      AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    willReplaceOnChanges: true
  name:
    type: string
    description: |
      Name to use for the virtual node. Must be between 1 and 255 characters in length.
    willReplaceOnChanges: true
  spec:
    $ref: "#/types/aws:appmesh/VirtualNodeSpec:VirtualNodeSpec"
    description: |
      Virtual node specification to apply.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
requiredInputs:
  - meshName
  - spec
stateInputs:
  description: |
    Input properties used for looking up and filtering VirtualNode resources.
  properties:
    arn:
      type: string
      description: |
        ARN of the virtual node.
    createdDate:
      type: string
      description: |
        Creation date of the virtual node.
    lastUpdatedDate:
      type: string
      description: |
        Last update date of the virtual node.
    meshName:
      type: string
      description: |
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
      willReplaceOnChanges: true
    meshOwner:
      type: string
      description: |
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
      willReplaceOnChanges: true
    name:
      type: string
      description: |
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
      willReplaceOnChanges: true
    resourceOwner:
      type: string
      description: |
        Resource owner's AWS account ID.
    spec:
      $ref: "#/types/aws:appmesh/VirtualNodeSpec:VirtualNodeSpec"
      description: |
        Virtual node specification to apply.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type: object
