$token: aws:transfer/user:User
properties:
  arn:
    type: string
    description: |
      Amazon Resource Name (ARN) of Transfer User
  homeDirectory:
    type: string
    description: |
      The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a `/`.  The first item in the path is the name of the home bucket (accessible as `${Transfer:HomeBucket}` in the policy) and the rest is the home directory (accessible as `${Transfer:HomeDirectory}` in the policy). For example, `/example-bucket-1234/username` would set the home bucket to `example-bucket-1234` and the home directory to `username`.
  homeDirectoryMappings:
    type: array
    items:
      $ref: "#/types/aws:transfer/UserHomeDirectoryMapping:UserHomeDirectoryMapping"
    description: |
      Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See Home Directory Mappings below.
  homeDirectoryType:
    type: string
    description: |
      The type of landing directory (folder) you mapped for your users' home directory. Valid values are `PATH` and `LOGICAL`.
  policy:
    type: string
    description: |
      An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. These are evaluated on-the-fly when navigating the bucket.
  posixProfile:
    $ref: "#/types/aws:transfer/UserPosixProfile:UserPosixProfile"
    description: |
      Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. See Posix Profile below.
  role:
    type: string
    description: |
      Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.
  serverId:
    type: string
    description: |
      The Server ID of the Transfer Server (e.g., `s-12345678`)
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  userName:
    type: string
    description: |
      The name used for log in to your SFTP server.
required:
  - arn
  - role
  - serverId
  - tagsAll
  - userName
inputProperties:
  homeDirectory:
    type: string
    description: |
      The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a `/`.  The first item in the path is the name of the home bucket (accessible as `${Transfer:HomeBucket}` in the policy) and the rest is the home directory (accessible as `${Transfer:HomeDirectory}` in the policy). For example, `/example-bucket-1234/username` would set the home bucket to `example-bucket-1234` and the home directory to `username`.
  homeDirectoryMappings:
    type: array
    items:
      $ref: "#/types/aws:transfer/UserHomeDirectoryMapping:UserHomeDirectoryMapping"
    description: |
      Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See Home Directory Mappings below.
  homeDirectoryType:
    type: string
    description: |
      The type of landing directory (folder) you mapped for your users' home directory. Valid values are `PATH` and `LOGICAL`.
  policy:
    type: string
    description: |
      An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. These are evaluated on-the-fly when navigating the bucket.
  posixProfile:
    $ref: "#/types/aws:transfer/UserPosixProfile:UserPosixProfile"
    description: |
      Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. See Posix Profile below.
  role:
    type: string
    description: |
      Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.
  serverId:
    type: string
    description: |
      The Server ID of the Transfer Server (e.g., `s-12345678`)
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block, tags with matching keys will overwrite those defined at the provider-level.
  userName:
    type: string
    description: |
      The name used for log in to your SFTP server.
    willReplaceOnChanges: true
requiredInputs:
  - role
  - serverId
  - userName
stateInputs:
  description: |
    Input properties used for looking up and filtering User resources.
  properties:
    arn:
      type: string
      description: |
        Amazon Resource Name (ARN) of Transfer User
    homeDirectory:
      type: string
      description: |
        The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a `/`.  The first item in the path is the name of the home bucket (accessible as `${Transfer:HomeBucket}` in the policy) and the rest is the home directory (accessible as `${Transfer:HomeDirectory}` in the policy). For example, `/example-bucket-1234/username` would set the home bucket to `example-bucket-1234` and the home directory to `username`.
    homeDirectoryMappings:
      type: array
      items:
        $ref: "#/types/aws:transfer/UserHomeDirectoryMapping:UserHomeDirectoryMapping"
      description: |
        Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See Home Directory Mappings below.
    homeDirectoryType:
      type: string
      description: |
        The type of landing directory (folder) you mapped for your users' home directory. Valid values are `PATH` and `LOGICAL`.
    policy:
      type: string
      description: |
        An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. These are evaluated on-the-fly when navigating the bucket.
    posixProfile:
      $ref: "#/types/aws:transfer/UserPosixProfile:UserPosixProfile"
      description: |
        Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. See Posix Profile below.
    role:
      type: string
      description: |
        Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.
    serverId:
      type: string
      description: |
        The Server ID of the Transfer Server (e.g., `s-12345678`)
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    userName:
      type: string
      description: |
        The name used for log in to your SFTP server.
      willReplaceOnChanges: true
  type: object
