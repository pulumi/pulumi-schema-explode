$token: aws:cloudfront/DistributionOriginCustomOriginConfig:DistributionOriginCustomOriginConfig
properties:
  httpPort:
    type: integer
    description: |
      The HTTP port the custom origin listens on.
    language:
      python:
        mapCase: false
  httpsPort:
    type: integer
    description: |
      The HTTPS port the custom origin listens on.
    language:
      python:
        mapCase: false
  originKeepaliveTimeout:
    type: integer
    description: |
      The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    language:
      python:
        mapCase: false
  originProtocolPolicy:
    type: string
    description: |
      The origin protocol policy to apply to
      your origin. One of `http-only`, `https-only`, or `match-viewer`.
    language:
      python:
        mapCase: false
  originReadTimeout:
    type: integer
    description: |
      The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    language:
      python:
        mapCase: false
  originSslProtocols:
    type: array
    items:
      type: string
    description: |
      The SSL/TLS protocols that you want
      CloudFront to use when communicating with your origin over HTTPS. A list of
      one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
    language:
      python:
        mapCase: false
type: object
required:
  - httpPort
  - httpsPort
  - originProtocolPolicy
  - originSslProtocols
