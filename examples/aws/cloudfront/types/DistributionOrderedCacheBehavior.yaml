$token: aws:cloudfront/DistributionOrderedCacheBehavior:DistributionOrderedCacheBehavior
properties:
  allowedMethods:
    type: array
    items:
      type: string
    description: |
      Controls which HTTP methods CloudFront
      processes and forwards to your Amazon S3 bucket or your custom origin.
    language:
      python:
        mapCase: false
  cachePolicyId:
    type: string
    description: |
      The unique identifier of the cache policy that
      is attached to the cache behavior.
    language:
      python:
        mapCase: false
  cachedMethods:
    type: array
    items:
      type: string
    description: |
      Controls whether CloudFront caches the
      response to requests using the specified HTTP methods.
    language:
      python:
        mapCase: false
  compress:
    type: boolean
    description: |
      Whether you want CloudFront to automatically
      compress content for web requests that include `Accept-Encoding: gzip` in
      the request header (default: `false`).
    language:
      python:
        mapCase: false
  defaultTtl:
    type: integer
    description: |
      The default amount of time (in seconds) that an
      object is in a CloudFront cache before CloudFront forwards another request
      in the absence of an `Cache-Control max-age` or `Expires` header.
    language:
      python:
        mapCase: false
  fieldLevelEncryptionId:
    type: string
    description: |
      Field level encryption configuration ID
    language:
      python:
        mapCase: false
  forwardedValues:
    $ref: "#/types/aws:cloudfront/DistributionOrderedCacheBehaviorForwardedValues:DistributionOrderedCacheBehaviorForwardedValues"
    description: |
      The forwarded values configuration that specifies how CloudFront
      handles query strings, cookies and headers (maximum one).
    language:
      python:
        mapCase: false
  functionAssociations:
    type: array
    items:
      $ref: "#/types/aws:cloudfront/DistributionOrderedCacheBehaviorFunctionAssociation:DistributionOrderedCacheBehaviorFunctionAssociation"
    description: |
      A config block that triggers a cloudfront
      function with specific actions (maximum 2).
    language:
      python:
        mapCase: false
  lambdaFunctionAssociations:
    type: array
    items:
      $ref: "#/types/aws:cloudfront/DistributionOrderedCacheBehaviorLambdaFunctionAssociation:DistributionOrderedCacheBehaviorLambdaFunctionAssociation"
    description: |
      A config block that triggers a lambda
      function with specific actions (maximum 4).
    language:
      python:
        mapCase: false
  maxTtl:
    type: integer
    description: |
      The maximum amount of time (in seconds) that an
      object is in a CloudFront cache before CloudFront forwards another request
      to your origin to determine whether the object has been updated. Only
      effective in the presence of `Cache-Control max-age`, `Cache-Control
      s-maxage`, and `Expires` headers.
    language:
      python:
        mapCase: false
  minTtl:
    type: integer
    description: |
      The minimum amount of time that you want objects to
      stay in CloudFront caches before CloudFront queries your origin to see
      whether the object has been updated. Defaults to 0 seconds.
    language:
      python:
        mapCase: false
  originRequestPolicyId:
    type: string
    description: |
      The unique identifier of the origin request policy
      that is attached to the behavior.
    language:
      python:
        mapCase: false
  pathPattern:
    type: string
    description: |
      The pattern (for example, `images/*.jpg`) that
      specifies which requests you want this cache behavior to apply to.
    language:
      python:
        mapCase: false
  realtimeLogConfigArn:
    type: string
    description: |
      The ARN of the real-time log configuration
      that is attached to this cache behavior.
    language:
      python:
        mapCase: false
  responseHeadersPolicyId:
    type: string
    description: |
      The identifier for a response headers policy.
    language:
      python:
        mapCase: false
  smoothStreaming:
    type: boolean
    description: |
      Indicates whether you want to distribute
      media files in Microsoft Smooth Streaming format using the origin that is
      associated with this cache behavior.
    language:
      python:
        mapCase: false
  targetOriginId:
    type: string
    description: |
      The value of ID for the origin that you want
      CloudFront to route requests to when a request matches the path pattern
      either for a cache behavior or for the default cache behavior.
    language:
      python:
        mapCase: false
  trustedKeyGroups:
    type: array
    items:
      type: string
    description: |
      A list of key group IDs that CloudFront can use to validate signed URLs or signed cookies.
      See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
    language:
      python:
        mapCase: false
  trustedSigners:
    type: array
    items:
      type: string
    description: |
      List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content.
      See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
    language:
      python:
        mapCase: false
  viewerProtocolPolicy:
    type: string
    description: |
      Use this element to specify the
      protocol that users can use to access the files in the origin specified by
      TargetOriginId when a request matches the path pattern in PathPattern. One
      of `allow-all`, `https-only`, or `redirect-to-https`.
    language:
      python:
        mapCase: false
type: object
required:
  - allowedMethods
  - cachedMethods
  - pathPattern
  - targetOriginId
  - viewerProtocolPolicy
language:
  nodejs:
    requiredOutputs:
      - allowedMethods
      - cachedMethods
      - defaultTtl
      - maxTtl
      - pathPattern
      - targetOriginId
      - viewerProtocolPolicy
