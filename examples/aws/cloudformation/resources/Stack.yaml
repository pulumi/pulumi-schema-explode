$token: aws:cloudformation/stack:Stack
properties:
  capabilities:
    type: array
    items:
      type: string
    description: |
      A list of capabilities.
      Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
  disableRollback:
    type: boolean
    description: |
      Set to true to disable rollback of the stack if stack creation failed.
      Conflicts with `on_failure`.
  iamRoleArn:
    type: string
    description: |
      The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
  name:
    type: string
    description: |
      Stack name.
  notificationArns:
    type: array
    items:
      type: string
    description: |
      A list of SNS topic ARNs to publish stack related events.
  onFailure:
    type: string
    description: |
      Action to be taken if stack creation fails. This must be
      one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
  outputs:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of outputs from the stack.
  parameters:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of Parameter structures that specify input parameters for the stack.
  policyBody:
    type: string
    description: |
      Structure containing the stack policy body.
      Conflicts w/ `policy_url`.
  policyUrl:
    type: string
    description: |
      Location of a file containing the stack policy.
      Conflicts w/ `policy_body`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of resource tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  templateBody:
    type: string
    description: |
      Structure containing the template body (max size: 51,200 bytes).
  templateUrl:
    type: string
    description: |
      Location of a file containing the template body (max size: 460,800 bytes).
  timeoutInMinutes:
    type: integer
    description: |
      The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
required:
  - name
  - outputs
  - parameters
  - policyBody
  - tagsAll
  - templateBody
inputProperties:
  capabilities:
    type: array
    items:
      type: string
    description: |
      A list of capabilities.
      Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
  disableRollback:
    type: boolean
    description: |
      Set to true to disable rollback of the stack if stack creation failed.
      Conflicts with `on_failure`.
    willReplaceOnChanges: true
  iamRoleArn:
    type: string
    description: |
      The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
  name:
    type: string
    description: |
      Stack name.
    willReplaceOnChanges: true
  notificationArns:
    type: array
    items:
      type: string
    description: |
      A list of SNS topic ARNs to publish stack related events.
  onFailure:
    type: string
    description: |
      Action to be taken if stack creation fails. This must be
      one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
    willReplaceOnChanges: true
  parameters:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of Parameter structures that specify input parameters for the stack.
  policyBody:
    type: string
    description: |
      Structure containing the stack policy body.
      Conflicts w/ `policy_url`.
  policyUrl:
    type: string
    description: |
      Location of a file containing the stack policy.
      Conflicts w/ `policy_body`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of resource tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  templateBody:
    type: string
    description: |
      Structure containing the template body (max size: 51,200 bytes).
  templateUrl:
    type: string
    description: |
      Location of a file containing the template body (max size: 460,800 bytes).
  timeoutInMinutes:
    type: integer
    description: |
      The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
    willReplaceOnChanges: true
stateInputs:
  description: |
    Input properties used for looking up and filtering Stack resources.
  properties:
    capabilities:
      type: array
      items:
        type: string
      description: |
        A list of capabilities.
        Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
    disableRollback:
      type: boolean
      description: |
        Set to true to disable rollback of the stack if stack creation failed.
        Conflicts with `on_failure`.
      willReplaceOnChanges: true
    iamRoleArn:
      type: string
      description: |
        The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
    name:
      type: string
      description: |
        Stack name.
      willReplaceOnChanges: true
    notificationArns:
      type: array
      items:
        type: string
      description: |
        A list of SNS topic ARNs to publish stack related events.
    onFailure:
      type: string
      description: |
        Action to be taken if stack creation fails. This must be
        one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
      willReplaceOnChanges: true
    outputs:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of outputs from the stack.
    parameters:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of Parameter structures that specify input parameters for the stack.
    policyBody:
      type: string
      description: |
        Structure containing the stack policy body.
        Conflicts w/ `policy_url`.
    policyUrl:
      type: string
      description: |
        Location of a file containing the stack policy.
        Conflicts w/ `policy_body`.
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of resource tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    templateBody:
      type: string
      description: |
        Structure containing the template body (max size: 51,200 bytes).
    templateUrl:
      type: string
      description: |
        Location of a file containing the template body (max size: 460,800 bytes).
    timeoutInMinutes:
      type: integer
      description: |
        The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
      willReplaceOnChanges: true
  type: object
