$token: aws:mq/configuration:Configuration
properties:
  arn:
    type: string
    description: |
      ARN of the configuration.
  authenticationStrategy:
    type: string
    description: |
      Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
  data:
    type: string
    description: |
      Broker configuration in XML format. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.
  description:
    type: string
    description: |
      Description of the configuration.
  engineType:
    type: string
    description: |
      Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
  engineVersion:
    type: string
    description: |
      Version of the broker engine.
  latestRevision:
    type: integer
    description: |
      Latest revision of the configuration.
  name:
    type: string
    description: |
      Name of the configuration.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
required:
  - arn
  - authenticationStrategy
  - data
  - engineType
  - engineVersion
  - latestRevision
  - name
  - tagsAll
inputProperties:
  authenticationStrategy:
    type: string
    description: |
      Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
  data:
    type: string
    description: |
      Broker configuration in XML format. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.
  description:
    type: string
    description: |
      Description of the configuration.
  engineType:
    type: string
    description: |
      Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
    willReplaceOnChanges: true
  engineVersion:
    type: string
    description: |
      Version of the broker engine.
    willReplaceOnChanges: true
  name:
    type: string
    description: |
      Name of the configuration.
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
requiredInputs:
  - data
  - engineType
  - engineVersion
stateInputs:
  description: |
    Input properties used for looking up and filtering Configuration resources.
  properties:
    arn:
      type: string
      description: |
        ARN of the configuration.
    authenticationStrategy:
      type: string
      description: |
        Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
    data:
      type: string
      description: |
        Broker configuration in XML format. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.
    description:
      type: string
      description: |
        Description of the configuration.
    engineType:
      type: string
      description: |
        Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
      willReplaceOnChanges: true
    engineVersion:
      type: string
      description: |
        Version of the broker engine.
      willReplaceOnChanges: true
    latestRevision:
      type: integer
      description: |
        Latest revision of the configuration.
    name:
      type: string
      description: |
        Name of the configuration.
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  type: object
