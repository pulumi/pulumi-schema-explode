$token: aws:rds/cluster:Cluster
properties:
  allocatedStorage:
    type: integer
    description: |
      The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster. (This setting is required to create a Multi-AZ DB cluster).
  allowMajorVersionUpgrade:
    type: boolean
    description: |
      Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
  applyImmediately:
    type: boolean
    description: |
      Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
  arn:
    type: string
    description: |
      Amazon Resource Name (ARN) of cluster
  availabilityZones:
    type: array
    items:
      type: string
    description: |
      A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. It is recommended to specify 3 AZs.
  backtrackWindow:
    type: integer
    description: |
      The target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
  backupRetentionPeriod:
    type: integer
    description: |
      The days to retain backups for. Default `1`
  clusterIdentifier:
    type: string
    description: |
      The cluster identifier. If omitted, this provider will assign a random, unique identifier.
  clusterIdentifierPrefix:
    type: string
    description: |
      Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
  clusterMembers:
    type: array
    items:
      type: string
    description: |
      List of RDS Instances that are a part of this cluster
  clusterResourceId:
    type: string
    description: |
      The RDS Cluster Resource ID
  copyTagsToSnapshot:
    type: boolean
    description: |
      Copy all Cluster `tags` to snapshots. Default is `false`.
  databaseName:
    type: string
    description: |
      Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
  dbClusterInstanceClass:
    type: string
    description: |
      The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster).
  dbClusterParameterGroupName:
    type: string
    description: |
      A cluster parameter group to associate with the cluster.
  dbInstanceParameterGroupName:
    type: string
    description: |
      Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.
  dbSubnetGroupName:
    type: string
    description: |
      A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
  deletionProtection:
    type: boolean
    description: |
      If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
  enableGlobalWriteForwarding:
    type: boolean
    description: |
      Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
  enableHttpEndpoint:
    type: boolean
    description: |
      Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
  enabledCloudwatchLogsExports:
    type: array
    items:
      type: string
    description: |
      Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
  endpoint:
    type: string
    description: |
      The DNS address of the RDS instance
  engine:
    type: string
    description: |
      The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
  engineMode:
    type: string
    description: |
      The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
  engineVersion:
    type: string
    description: |
      The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attributes Reference below.
  engineVersionActual:
    type: string
    description: |
      The running version of the database.
  finalSnapshotIdentifier:
    type: string
    description: |
      The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
  globalClusterIdentifier:
    type: string
    description: |
      The global cluster identifier specified on `aws.rds.GlobalCluster`.
  hostedZoneId:
    type: string
    description: |
      The Route53 Hosted Zone ID of the endpoint
  iamDatabaseAuthenticationEnabled:
    type: boolean
    description: |
      Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
  iamRoles:
    type: array
    items:
      type: string
    description: |
      A List of ARNs for the IAM roles to associate to the RDS Cluster.
  iops:
    type: integer
    description: |
      The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
  kmsKeyId:
    type: string
    description: |
      The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
  masterPassword:
    type: string
    description: |
      Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
  masterUsername:
    type: string
    description: |
      Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
  networkType:
    type: string
    description: |
      The network type of the cluster. Valid values: `IPV4`, `DUAL`.
  port:
    type: integer
    description: |
      The port on which the DB accepts connections
  preferredBackupWindow:
    type: string
    description: |
      The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
  preferredMaintenanceWindow:
    type: string
    description: |
      The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
  readerEndpoint:
    type: string
    description: |
      A read-only endpoint for the Aurora cluster, automatically
      load-balanced across replicas
  replicationSourceIdentifier:
    type: string
    description: |
      ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use `ignore_changes`.
  restoreToPointInTime:
    $ref: "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime"
    description: |
      Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
  s3Import:
    $ref: "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
  scalingConfiguration:
    $ref: "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration"
    description: |
      Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
  serverlessv2ScalingConfiguration:
    $ref: "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration"
    description: |
      Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.
  skipFinalSnapshot:
    type: boolean
    description: |
      Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
  snapshotIdentifier:
    type: string
    description: |
      Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
  sourceRegion:
    type: string
    description: |
      The source region for an encrypted replica DB cluster.
  storageEncrypted:
    type: boolean
    description: |
      Specifies whether the DB cluster is encrypted
  storageType:
    type: string
    description: |
      Specifies the storage type to be associated with the DB cluster. (This setting is required to create a Multi-AZ DB cluster). Valid values: `io1`, Default: `io1`.
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tagsAll:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  vpcSecurityGroupIds:
    type: array
    items:
      type: string
    description: |
      List of VPC security groups to associate with the Cluster
required:
  - allocatedStorage
  - applyImmediately
  - arn
  - availabilityZones
  - clusterIdentifier
  - clusterIdentifierPrefix
  - clusterMembers
  - clusterResourceId
  - databaseName
  - dbClusterParameterGroupName
  - dbSubnetGroupName
  - endpoint
  - engineVersion
  - engineVersionActual
  - hostedZoneId
  - iamRoles
  - kmsKeyId
  - masterUsername
  - networkType
  - port
  - preferredBackupWindow
  - preferredMaintenanceWindow
  - readerEndpoint
  - storageEncrypted
  - tagsAll
  - vpcSecurityGroupIds
inputProperties:
  allocatedStorage:
    type: integer
    description: |
      The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster. (This setting is required to create a Multi-AZ DB cluster).
  allowMajorVersionUpgrade:
    type: boolean
    description: |
      Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
  applyImmediately:
    type: boolean
    description: |
      Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
  availabilityZones:
    type: array
    items:
      type: string
    description: |
      A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. It is recommended to specify 3 AZs.
    willReplaceOnChanges: true
  backtrackWindow:
    type: integer
    description: |
      The target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
  backupRetentionPeriod:
    type: integer
    description: |
      The days to retain backups for. Default `1`
  clusterIdentifier:
    type: string
    description: |
      The cluster identifier. If omitted, this provider will assign a random, unique identifier.
    willReplaceOnChanges: true
  clusterIdentifierPrefix:
    type: string
    description: |
      Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
    willReplaceOnChanges: true
  clusterMembers:
    type: array
    items:
      type: string
    description: |
      List of RDS Instances that are a part of this cluster
  copyTagsToSnapshot:
    type: boolean
    description: |
      Copy all Cluster `tags` to snapshots. Default is `false`.
  databaseName:
    type: string
    description: |
      Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
    willReplaceOnChanges: true
  dbClusterInstanceClass:
    type: string
    description: |
      The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster).
  dbClusterParameterGroupName:
    type: string
    description: |
      A cluster parameter group to associate with the cluster.
  dbInstanceParameterGroupName:
    type: string
    description: |
      Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.
  dbSubnetGroupName:
    type: string
    description: |
      A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
    willReplaceOnChanges: true
  deletionProtection:
    type: boolean
    description: |
      If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
  enableGlobalWriteForwarding:
    type: boolean
    description: |
      Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
  enableHttpEndpoint:
    type: boolean
    description: |
      Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
  enabledCloudwatchLogsExports:
    type: array
    items:
      type: string
    description: |
      Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
  engine:
    type: string
    oneOf:
      - type: string
      - type: string
        $ref: "#/types/aws:rds/EngineType:EngineType"
    description: |
      The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
    willReplaceOnChanges: true
  engineMode:
    type: string
    oneOf:
      - type: string
      - type: string
        $ref: "#/types/aws:rds/EngineMode:EngineMode"
    description: |
      The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
    willReplaceOnChanges: true
  engineVersion:
    type: string
    description: |
      The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attributes Reference below.
  finalSnapshotIdentifier:
    type: string
    description: |
      The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
  globalClusterIdentifier:
    type: string
    description: |
      The global cluster identifier specified on `aws.rds.GlobalCluster`.
  iamDatabaseAuthenticationEnabled:
    type: boolean
    description: |
      Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
  iamRoles:
    type: array
    items:
      type: string
    description: |
      A List of ARNs for the IAM roles to associate to the RDS Cluster.
  iops:
    type: integer
    description: |
      The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
  kmsKeyId:
    type: string
    description: |
      The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
    willReplaceOnChanges: true
  masterPassword:
    type: string
    description: |
      Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
  masterUsername:
    type: string
    description: |
      Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    willReplaceOnChanges: true
  networkType:
    type: string
    description: |
      The network type of the cluster. Valid values: `IPV4`, `DUAL`.
  port:
    type: integer
    description: |
      The port on which the DB accepts connections
  preferredBackupWindow:
    type: string
    description: |
      The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
  preferredMaintenanceWindow:
    type: string
    description: |
      The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
  replicationSourceIdentifier:
    type: string
    description: |
      ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use `ignore_changes`.
  restoreToPointInTime:
    $ref: "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime"
    description: |
      Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
    willReplaceOnChanges: true
  s3Import:
    $ref: "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
  scalingConfiguration:
    $ref: "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration"
    description: |
      Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
  serverlessv2ScalingConfiguration:
    $ref: "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration"
    description: |
      Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.
  skipFinalSnapshot:
    type: boolean
    description: |
      Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
  snapshotIdentifier:
    type: string
    description: |
      Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
  sourceRegion:
    type: string
    description: |
      The source region for an encrypted replica DB cluster.
    willReplaceOnChanges: true
  storageEncrypted:
    type: boolean
    description: |
      Specifies whether the DB cluster is encrypted
    willReplaceOnChanges: true
  storageType:
    type: string
    description: |
      Specifies the storage type to be associated with the DB cluster. (This setting is required to create a Multi-AZ DB cluster). Valid values: `io1`, Default: `io1`.
    willReplaceOnChanges: true
  tags:
    type: object
    additionalProperties:
      type: string
    description: |
      A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  vpcSecurityGroupIds:
    type: array
    items:
      type: string
    description: |
      List of VPC security groups to associate with the Cluster
stateInputs:
  description: |
    Input properties used for looking up and filtering Cluster resources.
  properties:
    allocatedStorage:
      type: integer
      description: |
        The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster. (This setting is required to create a Multi-AZ DB cluster).
    allowMajorVersionUpgrade:
      type: boolean
      description: |
        Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
    applyImmediately:
      type: boolean
      description: |
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
    arn:
      type: string
      description: |
        Amazon Resource Name (ARN) of cluster
    availabilityZones:
      type: array
      items:
        type: string
      description: |
        A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. It is recommended to specify 3 AZs.
      willReplaceOnChanges: true
    backtrackWindow:
      type: integer
      description: |
        The target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
    backupRetentionPeriod:
      type: integer
      description: |
        The days to retain backups for. Default `1`
    clusterIdentifier:
      type: string
      description: |
        The cluster identifier. If omitted, this provider will assign a random, unique identifier.
      willReplaceOnChanges: true
    clusterIdentifierPrefix:
      type: string
      description: |
        Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
      willReplaceOnChanges: true
    clusterMembers:
      type: array
      items:
        type: string
      description: |
        List of RDS Instances that are a part of this cluster
    clusterResourceId:
      type: string
      description: |
        The RDS Cluster Resource ID
    copyTagsToSnapshot:
      type: boolean
      description: |
        Copy all Cluster `tags` to snapshots. Default is `false`.
    databaseName:
      type: string
      description: |
        Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
      willReplaceOnChanges: true
    dbClusterInstanceClass:
      type: string
      description: |
        The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster).
    dbClusterParameterGroupName:
      type: string
      description: |
        A cluster parameter group to associate with the cluster.
    dbInstanceParameterGroupName:
      type: string
      description: |
        Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.
    dbSubnetGroupName:
      type: string
      description: |
        A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
      willReplaceOnChanges: true
    deletionProtection:
      type: boolean
      description: |
        If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
    enableGlobalWriteForwarding:
      type: boolean
      description: |
        Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
    enableHttpEndpoint:
      type: boolean
      description: |
        Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
    enabledCloudwatchLogsExports:
      type: array
      items:
        type: string
      description: |
        Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
    endpoint:
      type: string
      description: |
        The DNS address of the RDS instance
    engine:
      type: string
      oneOf:
        - type: string
        - type: string
          $ref: "#/types/aws:rds/EngineType:EngineType"
      description: |
        The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
      willReplaceOnChanges: true
    engineMode:
      type: string
      oneOf:
        - type: string
        - type: string
          $ref: "#/types/aws:rds/EngineMode:EngineMode"
      description: |
        The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
      willReplaceOnChanges: true
    engineVersion:
      type: string
      description: |
        The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attributes Reference below.
    engineVersionActual:
      type: string
      description: |
        The running version of the database.
    finalSnapshotIdentifier:
      type: string
      description: |
        The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier:
      type: string
      description: |
        The global cluster identifier specified on `aws.rds.GlobalCluster`.
    hostedZoneId:
      type: string
      description: |
        The Route53 Hosted Zone ID of the endpoint
    iamDatabaseAuthenticationEnabled:
      type: boolean
      description: |
        Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
    iamRoles:
      type: array
      items:
        type: string
      description: |
        A List of ARNs for the IAM roles to associate to the RDS Cluster.
    iops:
      type: integer
      description: |
        The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    kmsKeyId:
      type: string
      description: |
        The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
      willReplaceOnChanges: true
    masterPassword:
      type: string
      description: |
        Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
    masterUsername:
      type: string
      description: |
        Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
      willReplaceOnChanges: true
    networkType:
      type: string
      description: |
        The network type of the cluster. Valid values: `IPV4`, `DUAL`.
    port:
      type: integer
      description: |
        The port on which the DB accepts connections
    preferredBackupWindow:
      type: string
      description: |
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
    preferredMaintenanceWindow:
      type: string
      description: |
        The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
    readerEndpoint:
      type: string
      description: |
        A read-only endpoint for the Aurora cluster, automatically
        load-balanced across replicas
    replicationSourceIdentifier:
      type: string
      description: |
        ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use `ignore_changes`.
    restoreToPointInTime:
      $ref: "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime"
      description: |
        Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
      willReplaceOnChanges: true
    s3Import:
      $ref: "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
    scalingConfiguration:
      $ref: "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration"
      description: |
        Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
    serverlessv2ScalingConfiguration:
      $ref: "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration"
      description: |
        Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.
    skipFinalSnapshot:
      type: boolean
      description: |
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
    snapshotIdentifier:
      type: string
      description: |
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
    sourceRegion:
      type: string
      description: |
        The source region for an encrypted replica DB cluster.
      willReplaceOnChanges: true
    storageEncrypted:
      type: boolean
      description: |
        Specifies whether the DB cluster is encrypted
      willReplaceOnChanges: true
    storageType:
      type: string
      description: |
        Specifies the storage type to be associated with the DB cluster. (This setting is required to create a Multi-AZ DB cluster). Valid values: `io1`, Default: `io1`.
      willReplaceOnChanges: true
    tags:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll:
      type: object
      additionalProperties:
        type: string
      description: |
        A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
    vpcSecurityGroupIds:
      type: array
      items:
        type: string
      description: |
        List of VPC security groups to associate with the Cluster
  type: object
