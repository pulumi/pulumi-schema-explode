$token: aws:lb/TargetGroupHealthCheck:TargetGroupHealthCheck
properties:
  enabled:
    type: boolean
    description: |
      Boolean to enable / disable `stickiness`. Default is `true`.
    language:
      python:
        mapCase: false
  healthyThreshold:
    type: integer
    description: |
      Number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
    language:
      python:
        mapCase: false
  interval:
    type: integer
    description: |
      Approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds.
    language:
      python:
        mapCase: false
  matcher:
    type: string
    description: |
      Response codes to use when checking for a healthy responses from a target. You can specify multiple values (for example, "200,202" for HTTP(s) or "0,12" for GRPC) or a range of values (for example, "200-299" or "0-99"). Required for HTTP/HTTPS/GRPC ALB. Only applies to Application Load Balancers (i.e., HTTP/HTTPS/GRPC) not Network Load Balancers (i.e., TCP).
    language:
      python:
        mapCase: false
  path:
    type: string
    description: |
      Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
    language:
      python:
        mapCase: false
  port:
    type: string
    description: |
      Port to use to connect with the target. Valid values are either ports 1-65535, or `traffic-port`. Defaults to `traffic-port`.
    language:
      python:
        mapCase: false
  protocol:
    type: string
    description: |
      Protocol to use to connect with the target. Defaults to `HTTP`. Not applicable when `target_type` is `lambda`.
    language:
      python:
        mapCase: false
  timeout:
    type: integer
    description: |
      Amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 5 seconds for HTTP health checks.
    language:
      python:
        mapCase: false
  unhealthyThreshold:
    type: integer
    description: |
      Number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the `healthy_threshold`. Defaults to 3.
    language:
      python:
        mapCase: false
type: object
language:
  nodejs:
    requiredOutputs:
      - matcher
      - path
      - timeout
