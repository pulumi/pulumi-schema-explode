$token: aws:apigateway/integrationResponse:IntegrationResponse
properties:
  contentHandling:
    type: string
    description: |
      How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
  httpMethod:
    type: string
    description: |
      HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
  resourceId:
    type: string
    description: |
      API resource ID.
  responseParameters:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
  responseTemplates:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of templates used to transform the integration response body.
  restApi:
    type: string
    description: |
      ID of the associated REST API.
  selectionPattern:
    type: string
    description: |
      Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
  statusCode:
    type: string
    description: |
      HTTP status code.
required:
  - httpMethod
  - resourceId
  - restApi
  - statusCode
inputProperties:
  contentHandling:
    type: string
    description: |
      How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
  httpMethod:
    type: string
    description: |
      HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
    willReplaceOnChanges: true
  resourceId:
    type: string
    description: |
      API resource ID.
    willReplaceOnChanges: true
  responseParameters:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
  responseTemplates:
    type: object
    additionalProperties:
      type: string
    description: |
      Map of templates used to transform the integration response body.
  restApi:
    type: string
    oneOf:
      - type: string
      - type: string
        $ref: "#/types/aws:apigateway/restApi:RestApi"
    description: |
      ID of the associated REST API.
    willReplaceOnChanges: true
  selectionPattern:
    type: string
    description: |
      Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
  statusCode:
    type: string
    description: |
      HTTP status code.
requiredInputs:
  - httpMethod
  - resourceId
  - restApi
  - statusCode
stateInputs:
  description: |
    Input properties used for looking up and filtering IntegrationResponse resources.
  properties:
    contentHandling:
      type: string
      description: |
        How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
    httpMethod:
      type: string
      description: |
        HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
      willReplaceOnChanges: true
    resourceId:
      type: string
      description: |
        API resource ID.
      willReplaceOnChanges: true
    responseParameters:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
    responseTemplates:
      type: object
      additionalProperties:
        type: string
      description: |
        Map of templates used to transform the integration response body.
    restApi:
      type: string
      oneOf:
        - type: string
        - type: string
          $ref: "#/types/aws:apigateway/restApi:RestApi"
      description: |
        ID of the associated REST API.
      willReplaceOnChanges: true
    selectionPattern:
      type: string
      description: |
        Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
    statusCode:
      type: string
      description: |
        HTTP status code.
  type: object
