$token: aws:apigateway/MethodSettingsSettings:MethodSettingsSettings
properties:
  cacheDataEncrypted:
    type: boolean
    description: |
      Whether the cached responses are encrypted.
    language:
      python:
        mapCase: false
  cacheTtlInSeconds:
    type: integer
    description: |
      Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
    language:
      python:
        mapCase: false
  cachingEnabled:
    type: boolean
    description: |
      Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
    language:
      python:
        mapCase: false
  dataTraceEnabled:
    type: boolean
    description: |
      Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
    language:
      python:
        mapCase: false
  loggingLevel:
    type: string
    description: |
      Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are `OFF`, `ERROR`, and `INFO`.
    language:
      python:
        mapCase: false
  metricsEnabled:
    type: boolean
    description: |
      Whether Amazon CloudWatch metrics are enabled for this method.
    language:
      python:
        mapCase: false
  requireAuthorizationForCacheControl:
    type: boolean
    description: |
      Whether authorization is required for a cache invalidation request.
    language:
      python:
        mapCase: false
  throttlingBurstLimit:
    type: integer
    description: |
      Throttling burst limit. Default: `-1` (throttling disabled).
    language:
      python:
        mapCase: false
  throttlingRateLimit:
    type: number
    description: |
      Throttling rate limit. Default: `-1` (throttling disabled).
    language:
      python:
        mapCase: false
  unauthorizedCacheControlHeaderStrategy:
    type: string
    description: |
      How to handle unauthorized requests for cache invalidation. The available values are `FAIL_WITH_403`, `SUCCEED_WITH_RESPONSE_HEADER`, `SUCCEED_WITHOUT_RESPONSE_HEADER`.
    language:
      python:
        mapCase: false
type: object
language:
  nodejs:
    requiredOutputs:
      - cacheDataEncrypted
      - cacheTtlInSeconds
      - cachingEnabled
      - dataTraceEnabled
      - loggingLevel
      - metricsEnabled
      - requireAuthorizationForCacheControl
      - unauthorizedCacheControlHeaderStrategy
